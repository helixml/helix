# For more information visit:
# https://docs.helix.ml/helix/private-deployment/manual-install/kubernetes/ and
# https://docs.helix.ml/helix/private-deployment/environment-variables/

global:
  # Set this AND envVariables.APP_URL to the public URL of your hostname, e.g.
  # https://helix.mydomain.com if you have set up TLS termination.
  serverUrl: http://localhost:8080

image:
  # It's good practice to pin the version of the software you're running!
  # Get this from https://get.helix.ml/latest.txt or check https://github.com/helixml/helix/releases
  # YOU MUST SET THIS VALUE OR IT WILL NOT WORK
  tag: "1.6.13"

controlplane:
  # Haystack configuration to use haystack for production-ready RAG. If set,
  # haystack will be deployed as a sidecar to the api pod and connected via a
  # UNIX socket so that haystack can use embeddings from a configured helix
  # inference (embeddings) provider.
  haystack:
    enabled: true
    embeddingsModel: "Alibaba-NLP/gte-Qwen2-7B-instruct"
    embeddingsDim: "3584"
    chunkSize: "1000"
    chunkOverlap: "50"
    pgvectorDsn: "postgresql://postgres:pgvector@my-helix-controlplane-pgvector:5432/postgres"

  # RAG configuration
  rag:
    # The default RAG provider to use. Valid values: haystack, typesense
    defaultProvider: "haystack"
    # The helix inference provider that will serve embeddings for haystack.
    # Valid values: vllm (for haystack which uses external GPU-accelerated
    # embeddings, typesense does its own embeddings so leave this unset for
    # typesense)
    embeddingsProvider: "vllm"

  # Inference configuration
  inference:
    # Valid values: openai, togetherai, helix
    defaultProvider: "openai"

  # Provider configurations (examples of the three fixed global provider names)
  # You can also add dynamic providers at runtime through the Dashboard
  providers:
    vllm:
      baseUrl: "http://vllm-gte.default.svc.cluster.local/v1"
      apiKey: "EMPTY"
    openai:
      baseUrl: "http://vllm-llama.default.svc.cluster.local/v1"
      apiKey: "EMPTY"

# Environment variables that will be added to the configmap
envVariables:
  LOG_LEVEL: debug
  APP_URL: http://localhost:8080
  # Database
  POSTGRES_HOST: my-helix-controlplane-postgresql
  POSTGRES_USER: helix
  POSTGRES_PASSWORD: oh-hallo-insecure-password
  POSTGRES_DATABASE: helix
  # Runners
  RUNNER_TOKEN: oh-hallo-insecure-token
  # Keycloak location
  KEYCLOAK_URL: http://keycloak:80/auth
  # How Keycloak redirects the users on login, should be user facing
  KEYCLOAK_FRONTEND_URL: http://localhost:8080/auth
  KEYCLOAK_USER: "admin"
  KEYCLOAK_PASSWORD: "oh-hallo-insecure-password"
  # Dashboard and admin access
  ADMIN_USER_SOURCE: "env"
  # If ADMIN_USER_SOURCE is "env", this will be the comma-separated list of user
  # ids that are admins or the word "all" if you want to allow all users to be admins
  ADMIN_USER_IDS: "all"

tika:
  enabled: false

chrome:
  enabled: true

typesense:
  enabled: false

gptscript:
  enabled: true
  replicas: 2
  concurrency: 20
  maxTasks: 0

# PGVector configuration (if using with haystack and not pointing to external PGVector)
pgvector:
  enabled: true
  auth:
    username: postgres
    password: pgvector
    database: postgres
  persistence:
    enabled: true
    size: 8Gi
    storageClass: ""
    annotations: {}
    accessModes:
      - ReadWriteOnce
    existingClaim: ""
    selector: {}
    dataSource: {}

persistence: # for api filestore
  enabled: true
  size: 8Gi
