config_version = 6
hostname = 'Helix'
# UUID will be auto-generated on first run

# GStreamer configuration (keep all encoder settings)
[gstreamer.audio]
default_audio_params = 'queue max-size-buffers=3 leaky=downstream ! audiorate ! audioconvert'
default_opus_encoder = 'opusenc bitrate={bitrate} bitrate-type=cbr frame-size={packet_duration} bandwidth=fullband audio-type=restricted-lowdelay max-payload-size=1400'
default_sink = '''rtpmoonlightpay_audio name=moonlight_pay packet_duration={packet_duration} encrypt={encrypt} aes_key="{aes_key}" aes_iv="{aes_iv}" !
appsink name=wolf_udp_sink'''
default_source = 'interpipesrc name=interpipesrc_{}_audio listen-to={session_id}_audio is-live=true stream-sync=restart-ts max-bytes=0 max-buffers=3 block=false'

[gstreamer.video]
default_sink = '''rtpmoonlightpay_video name=moonlight_pay payload_size={payload_size} fec_percentage={fec_percentage} min_required_fec_packets={min_required_fec_packets} !
appsink sync=false name=wolf_udp_sink
'''
default_source = 'interpipesrc name=interpipesrc_{}_video listen-to={session_id}_video is-live=true stream-sync=restart-ts max-bytes=0 max-buffers=1 leaky-type=downstream'

    [gstreamer.video.defaults.nvcodec]
    video_params = '''cudaupload !
cudaconvertscale add-borders=true !
video/x-raw(memory:CUDAMemory), width={width}, height={height}, chroma-site={color_range}, format=NV12, colorimetry={color_space}, pixel-aspect-ratio=1/1'''
    video_params_zero_copy = '''cudaupload !
cudaconvertscale add-borders=true !
video/x-raw(memory:CUDAMemory),format=NV12, width={width}, height={height}, pixel-aspect-ratio=1/1
'''

# ... (all other encoder configs - truncated for brevity)

# NO paired_clients by default - users will pair via Helix UI

# Profiles configuration
[[profiles]]
id = 'moonlight-profile-id'
name = 'Helix Streaming'

    # Wolf UI - 2D lobby selector
    [[profiles.apps]]
    icon_png_path = 'https://raw.githubusercontent.com/games-on-whales/wolf-ui/refs/heads/main/src/Icons/wolf_ui_icon.png'
    render_node = '/dev/dri/renderD128'
    start_audio_server = true
    start_virtual_compositor = true
    title = 'Wolf UI'

        [profiles.apps.runner]
        base_create_json = '''{
      "HostConfig": {
        "IpcMode": "host",
        "CapAdd": ["NET_RAW", "MKNOD", "NET_ADMIN", "SYS_ADMIN", "SYS_NICE"],
        "Privileged": false,
        "DeviceCgroupRules": ["c 13:* rmw", "c 244:* rmw"]
      }
    }'''
        devices = []
        env = [
            'GOW_REQUIRED_DEVICES=/dev/input/event* /dev/dri/* /dev/nvidia*',
            'WOLF_SOCKET_PATH=/var/run/wolf/wolf.sock',
            'WOLF_UI_AUTOUPDATE=False',
            'LOGLEVEL=INFO'
        ]
        image = 'ghcr.io/games-on-whales/wolf-ui:main'
        mounts = [ 'wolf-socket:/var/run/wolf:rw' ]
        name = 'Wolf-UI'
        ports = []
        type = 'docker'

    # Helix Lab 3D - Immersive lobby selector
    [[profiles.apps]]
    render_node = '/dev/dri/renderD128'
    start_audio_server = true
    start_virtual_compositor = true
    title = 'Helix Lab 3D'

        [profiles.apps.runner]
        base_create_json = '{"HostConfig":{"IpcMode":"host","NetworkMode":"helix_default"}}'
        devices = []
        env = [
            'GOW_REQUIRED_DEVICES=/dev/input/event* /dev/dri/* /dev/nvidia*',
            'WOLF_SOCKET_PATH=/var/run/wolf/wolf.sock'
        ]
        image = 'helix/wolf-ui-3d:latest'
        mounts = [ 'wolf-socket:/var/run/wolf:rw' ]
        name = 'Helix-Lab-3D'
        ports = []
        type = 'docker'

    # Test ball - For testing streaming
    [[profiles.apps]]
    icon_png_path = 'https://raw.githubusercontent.com/games-on-whales/wolf/refs/heads/wolf-ui/docs/images/test_ball_icon.png'
    render_node = '/dev/dri/renderD128'
    start_audio_server = false
    start_virtual_compositor = false
    title = 'Test ball'

        [profiles.apps.runner]
        run_cmd = "sh -c \"while :; do echo 'running...'; sleep 10; done\""
        type = 'process'

        [profiles.apps.audio]
        source = 'audiotestsrc wave=ticks is-live=true'

        [profiles.apps.video]
        source = '''videotestsrc pattern=ball flip=true is-live=true !
video/x-raw, framerate={fps}/1
'''

# User profile for user-created apps (empty by default)
[[profiles]]
icon_png_path = ''
id = 'user'
name = 'User'
