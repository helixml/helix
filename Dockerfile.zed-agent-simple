# Build stage for Go application
FROM golang:1.24 AS go-build-env
WORKDIR /app
COPY go.mod .
COPY go.sum .
RUN go mod download
COPY api ./api
COPY .git /.git
WORKDIR /app/api
RUN CGO_ENABLED=0 go build -buildvcs=false -ldflags "-s -w" -o /helix

# Skip Zed for now - focus on getting XRDP desktop working first

# Use proven working RDP base image
FROM scottyhardy/docker-remote-desktop:latest

# Set password via environment variable (base image handles XRDP configuration)
ENV PASSWORD=dev-insecure-change-me-in-production

# Install Zed dependencies
RUN apt-get update && apt-get install -y \
    wget git unzip curl \
    build-essential cmake \
    nodejs npm python3 python3-pip \
    libfontconfig1 libfreetype6 libxcb1 libxcb-render0 libxcb-shape0 \
    libxcb-xfixes0 libxcb-shm0 libxkbcommon0 libxkbcommon-x11-0 \
    libasound2 libssl3 libgtk-3-0 libgdk-pixbuf2.0-0 libpango-1.0-0 libcairo2 \
    && rm -rf /var/lib/apt/lists/*

# Install MCP filesystem server
RUN npm install -g @modelcontextprotocol/server-filesystem || echo "MCP install failed, continuing..."

# Copy and install Zed binary
COPY --from=zed-build /usr/local/bin/zed /usr/local/bin/zed
RUN chmod +x /usr/local/bin/zed

# Copy Helix external agent runner
COPY --from=go-build-env /helix /usr/local/bin/helix

# Create workspace directory
RUN mkdir -p /workspace && chmod 755 /workspace

# Add Zed to the desktop applications menu
RUN mkdir -p /usr/share/applications
COPY <<EOF /usr/share/applications/zed.desktop
[Desktop Entry]
Name=Zed Editor
Comment=High-performance code editor
Exec=/usr/local/bin/zed
Icon=text-editor
Terminal=false
Type=Application
Categories=Development;TextEditor;
EOF

# Create startup script that runs the external agent runner
COPY <<EOF /start-helix-agent.sh
#!/bin/bash
set -e
echo "Starting Helix External Agent Runner..."

# Start the external agent runner with environment variables
exec /usr/local/bin/helix external-agent-runner
EOF

RUN chmod +x /start-helix-agent.sh

# Set up the agent runner to start automatically in background
RUN echo '/start-helix-agent.sh &' >> /startup.sh || echo "Will start manually for now"

# Expose ports
EXPOSE 3389 3030

# Use base image's default entrypoint (handles XRDP startup)