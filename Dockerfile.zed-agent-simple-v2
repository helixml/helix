# Build stage for Go application
FROM golang:1.24 AS go-build-env
WORKDIR /app
COPY go.mod .
COPY go.sum .
RUN go mod download
COPY api ./api
COPY .git /.git
WORKDIR /app/api
RUN apt-get update && apt-get install -y gcc g++ libc6-dev && rm -rf /var/lib/apt/lists/*
RUN go install github.com/air-verse/air@v1.52.3
RUN CGO_ENABLED=0 go build -buildvcs=false -ldflags "-s -w" -o /helix

# Use proven working RDP base image
FROM scottyhardy/docker-remote-desktop:latest

# Set password via environment variable (base image handles XRDP configuration)
ENV PASSWORD=dev-insecure-change-me-in-production

# Override the base image entrypoint to use our PASSWORD env var
COPY <<EOF /usr/bin/custom-entrypoint
#!/usr/bin/env bash

# Create the ubuntu user account (matching scottyhardy base image)
if ! id ubuntu >/dev/null 2>&1; then
    groupadd --gid 1020 ubuntu
    useradd --shell /bin/bash --uid 1020 --gid 1020 --groups sudo --create-home --home-dir /home/ubuntu ubuntu
fi

# Set ubuntu user password from PASSWORD environment variable
if [ -n "\$PASSWORD" ]; then
    echo "ubuntu:\$PASSWORD" | chpasswd
    echo "Password set for ubuntu user from PASSWORD env var: \$PASSWORD"
else
    echo "ubuntu:ubuntu" | chpasswd
    echo "Using default password 'ubuntu' for ubuntu user"
fi

# Remove existing sesman/xrdp PID files to prevent rdp sessions hanging on container restart
[ ! -f /var/run/xrdp/xrdp-sesman.pid ] || rm -f /var/run/xrdp/xrdp-sesman.pid
[ ! -f /var/run/xrdp/xrdp.pid ] || rm -f /var/run/xrdp/xrdp.pid

# Start our helix agent in background first
/start-helix-agent.sh &

# Start xrdp sesman service in background (must not block)
/usr/sbin/xrdp-sesman &

# Run xrdp in foreground (like original)
exec /usr/sbin/xrdp --nodaemon
EOF

RUN chmod +x /usr/bin/custom-entrypoint

# Configure XRDP for fixed 1080p resolution  
RUN sed -i 's/#enable_dynamic_resizing=false/enable_dynamic_resizing=true/' /etc/xrdp/xrdp.ini && \
    sed -i 's/Modes "640x480" "800x600" "1024x768" "1280x720" "1280x1024" "1600x900" "1920x1080"/Modes "1920x1080" "1600x900" "1280x1024" "1280x720" "1024x768" "800x600" "640x480"/' /etc/X11/xrdp/xorg.conf && \
    sed -i '/param=-logfile/a param=-geometry\nparam=1920x1080' /etc/xrdp/sesman.ini && \
    echo 'Configured XRDP for forced 1080p resolution with OpenGL extensions enabled'

# Install additional dependencies for Zed (base image already has XRDP working)
RUN apt-get update && apt-get install -y \
    wget git unzip curl sqlite3 ca-certificates \
    build-essential cmake \
    nodejs npm python3 python3-pip \
    libfontconfig1 libfreetype6 libxcb1 libxcb-render0 libxcb-shape0 \
    libxcb-xfixes0 libxcb-shm0 libxkbcommon0 libxkbcommon-x11-0 \
    libasound2t64 libssl3 libgtk-3-0 libgdk-pixbuf2.0-0 libpango-1.0-0 libcairo2 \
    vulkan-tools mesa-vulkan-drivers libvulkan1 \
    && rm -rf /var/lib/apt/lists/*

# Copy Go from build stage for air hot reloading
COPY --from=go-build-env /usr/local/go /usr/local/go

# Add Go to PATH
ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"
ENV GOMODCACHE="/go/pkg/mod"
ENV GOCACHE="/root/.cache/go-build"

# Fix git ownership issue for mounted source code
RUN git config --global --add safe.directory /workspace/helix

# Create symlink to mounted zed-build directory (no copy needed)
RUN ln -sf /zed-build/zed /usr/local/bin/zed

# Copy the compiled Helix binary and air
COPY --from=go-build-env /helix /usr/local/bin/helix
COPY --from=go-build-env /go/bin/air /usr/local/bin/air

# Install MCP filesystem server
RUN npm install -g @modelcontextprotocol/server-filesystem || echo "MCP install failed, continuing..."

# Create workspace directory
RUN mkdir -p /workspace && chmod 755 /workspace

# Create startup script that runs the external agent runner
COPY <<EOF /start-helix-agent.sh
#!/bin/bash
set -e
echo "Starting Helix External Agent Runner..."

# Force software rendering and software Vulkan for Zed in RDP environment
export LIBGL_ALWAYS_SOFTWARE=1
export GALLIUM_DRIVER=llvmpipe
export ZED_ALLOW_EMULATED_GPU=1
export VK_ICD_FILENAMES=/usr/share/vulkan/icd.d/lvp_icd.x86_64.json
export MESA_LOADER_DRIVER_OVERRIDE=llvmpipe

# Start the external agent runner with environment variables
exec /usr/local/bin/helix external-agent-runner
EOF

RUN chmod +x /start-helix-agent.sh

# Add Zed to desktop applications menu
RUN mkdir -p /usr/share/applications
COPY <<EOF /usr/share/applications/zed.desktop
[Desktop Entry]
Name=Zed Editor
Comment=High-performance code editor
Exec=/usr/local/bin/zed
Icon=text-editor
Terminal=false
Type=Application
Categories=Development;TextEditor;
EOF

# Set up the agent runner to start automatically in background
RUN echo '/start-helix-agent.sh &' >> /startup.sh || echo "Will start manually for now"

# Expose ports
EXPOSE 3389 3030

# Use our custom entrypoint that sets password and starts both XRDP and Helix agent
ENTRYPOINT ["/usr/bin/custom-entrypoint"]