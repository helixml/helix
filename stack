#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

export DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
export TMUX_SESSION=${TMUX_SESSION:="helix"}

function psql() {
  docker-compose exec postgres psql --user postgres "$@"
}

function start() {
  if tmux has-session -t "$TMUX_SESSION" 2>/dev/null; then
    echo "Session $TMUX_SESSION already exists. Attaching..."
    sleep 1
    tmux -2 attach -t $TMUX_SESSION
    exit 0;
  fi
  
  export MANUALRUN=1
  export LOG_LEVEL=debug

  echo "Starting docker-compose"
  docker-compose up -d
  sleep 2
  
  echo "Creating tmux session $TMUX_SESSION..."

  # get the size of the window and create a session at that size
  local screensize=$(stty size)
  local width=$(echo -n "$screensize" | awk '{print $2}')
  local height=$(echo -n "$screensize" | awk '{print $1}')
  tmux -2 new-session -d -s $TMUX_SESSION -x "$width" -y "$(($height - 1))"

  tmux split-window -v -d
  tmux select-pane -t 1
  tmux split-window -v -d
  tmux select-pane -t 0
  tmux split-window -v -d
  
  tmux send-keys -t 0 'docker-compose logs -f frontend' C-m
  tmux send-keys -t 1 'docker-compose exec api bash' C-m
  tmux send-keys -t 1 'go run . serve' C-m
  tmux send-keys -t 2 'docker-compose exec unstructured bash' C-m
  tmux send-keys -t 2 'python3 src/main.py'

  tmux -2 attach-session -t $TMUX_SESSION
}

function stop() {
  echo "Stopping tmux session $TMUX_SESSION..."
  tmux kill-session -t $TMUX_SESSION
  echo "Removing docker containers"
  docker rm -f $(docker ps -aq) || true
}

eval "$@"
