// Code generated by MockGen. DO NOT EDIT.
// Source: model_info.go
//
// Generated by this command:
//
//	mockgen -source model_info.go -destination model_info_mocks.go -package model
//

// Package model is a generated GoMock package.
package model

import (
	context "context"
	reflect "reflect"

	types "github.com/helixml/helix/api/pkg/types"
	gomock "go.uber.org/mock/gomock"
)

// MockModelInfoProvider is a mock of ModelInfoProvider interface.
type MockModelInfoProvider struct {
	ctrl     *gomock.Controller
	recorder *MockModelInfoProviderMockRecorder
	isgomock struct{}
}

// MockModelInfoProviderMockRecorder is the mock recorder for MockModelInfoProvider.
type MockModelInfoProviderMockRecorder struct {
	mock *MockModelInfoProvider
}

// NewMockModelInfoProvider creates a new mock instance.
func NewMockModelInfoProvider(ctrl *gomock.Controller) *MockModelInfoProvider {
	mock := &MockModelInfoProvider{ctrl: ctrl}
	mock.recorder = &MockModelInfoProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockModelInfoProvider) EXPECT() *MockModelInfoProviderMockRecorder {
	return m.recorder
}

// GetModelInfo mocks base method.
func (m *MockModelInfoProvider) GetModelInfo(ctx context.Context, request *ModelInfoRequest) (*types.ModelInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModelInfo", ctx, request)
	ret0, _ := ret[0].(*types.ModelInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetModelInfo indicates an expected call of GetModelInfo.
func (mr *MockModelInfoProviderMockRecorder) GetModelInfo(ctx, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModelInfo", reflect.TypeOf((*MockModelInfoProvider)(nil).GetModelInfo), ctx, request)
}
