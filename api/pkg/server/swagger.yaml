definitions:
  controller.MemoryEstimationResponse:
    properties:
      cached:
        type: boolean
      error:
        type: string
      estimate:
        $ref: '#/definitions/memory.MemoryEstimate'
      model_id:
        type: string
    type: object
  filestore.Config:
    properties:
      folders:
        items:
          $ref: '#/definitions/filestore.Folder'
        type: array
      user_prefix:
        description: |-
          this will be the virtual path from the storage instance
          to the users root directory
          we use this to strip the full paths in the frontend so we can deal with only relative paths
        type: string
    type: object
  filestore.Folder:
    properties:
      name:
        type: string
      readonly:
        type: boolean
    type: object
  filestore.Item:
    properties:
      created:
        description: timestamp
        type: integer
      directory:
        description: is this thing a folder or not?
        type: boolean
      name:
        description: the filename
        type: string
      path:
        description: the relative path to the file from the base path of the storage
          instance
        type: string
      size:
        description: bytes
        type: integer
      url:
        description: the URL that can be used to load the object directly
        type: string
    type: object
  github_com_helixml_helix_api_pkg_types.Config:
    properties:
      rules:
        items:
          $ref: '#/definitions/types.Rule'
        type: array
    type: object
  github_com_helixml_helix_api_pkg_types.Tool:
    properties:
      config:
        $ref: '#/definitions/types.ToolConfig'
      description:
        type: string
      global:
        type: boolean
      id:
        type: string
      name:
        type: string
      system_prompt:
        description: E.g. As a restaurant expert, you provide personalized restaurant
          recommendations
        type: string
      tool_type:
        $ref: '#/definitions/github_com_helixml_helix_api_pkg_types.ToolType'
    type: object
  github_com_helixml_helix_api_pkg_types.ToolType:
    enum:
    - api
    - browser
    - gptscript
    - zapier
    - calculator
    - email
    - web_search
    - azure_devops
    - mcp
    type: string
    x-enum-varnames:
    - ToolTypeAPI
    - ToolTypeBrowser
    - ToolTypeGPTScript
    - ToolTypeZapier
    - ToolTypeCalculator
    - ToolTypeEmail
    - ToolTypeWebSearch
    - ToolTypeAzureDevOps
    - ToolTypeMCP
  github_com_helixml_helix_api_pkg_types.Usage:
    properties:
      completion_tokens:
        type: integer
      duration_ms:
        description: How long the request took in milliseconds
        type: integer
      prompt_tokens:
        type: integer
      total_tokens:
        type: integer
    type: object
  github_com_sashabaranov_go-openai.ChatCompletionChoice:
    properties:
      content_filter_results:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ContentFilterResults'
      finish_reason:
        allOf:
        - $ref: '#/definitions/github_com_sashabaranov_go-openai.FinishReason'
        description: |-
          FinishReason
          stop: API returned complete message,
          or a message terminated by one of the stop sequences provided via the stop parameter
          length: Incomplete model output due to max_tokens parameter or token limit
          function_call: The model decided to call a function
          content_filter: Omitted content due to a flag from our content filters
          null: API response still in progress or incomplete
      index:
        type: integer
      logprobs:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.LogProbs'
      message:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionMessage'
    type: object
  github_com_sashabaranov_go-openai.ChatCompletionMessage:
    properties:
      content:
        type: string
      function_call:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.FunctionCall'
      multiContent:
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatMessagePart'
        type: array
      name:
        description: |-
          This property isn't in the official documentation, but it's in
          the documentation for the official library for python:
          - https://github.com/openai/openai-python/blob/main/chatml.md
          - https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb
        type: string
      refusal:
        type: string
      role:
        type: string
      tool_call_id:
        description: For Role=tool prompts this should be set to the ID given in the
          assistant's prior request to call a tool.
        type: string
      tool_calls:
        description: For Role=assistant prompts this may be set to the tool calls
          generated by the model, such as function calls.
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ToolCall'
        type: array
    type: object
  github_com_sashabaranov_go-openai.ChatCompletionRequest:
    properties:
      frequency_penalty:
        type: number
      function_call:
        description: 'Deprecated: use ToolChoice instead.'
      functions:
        description: 'Deprecated: use Tools instead.'
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.FunctionDefinition'
        type: array
      logit_bias:
        additionalProperties:
          type: integer
        description: |-
          LogitBias is must be a token id string (specified by their token ID in the tokenizer), not a word string.
          incorrect: `"logit_bias":{"You": 6}`, correct: `"logit_bias":{"1639": 6}`
          refs: https://platform.openai.com/docs/api-reference/chat/create#chat/create-logit_bias
        type: object
      logprobs:
        description: |-
          LogProbs indicates whether to return log probabilities of the output tokens or not.
          If true, returns the log probabilities of each output token returned in the content of message.
          This option is currently not available on the gpt-4-vision-preview model.
        type: boolean
      max_completion_tokens:
        description: |-
          MaxCompletionTokens An upper bound for the number of tokens that can be generated for a completion,
          including visible output tokens and reasoning tokens https://platform.openai.com/docs/guides/reasoning
        type: integer
      max_tokens:
        description: |-
          MaxTokens The maximum number of tokens that can be generated in the chat completion.
          This value can be used to control costs for text generated via API.
          This value is now deprecated in favor of max_completion_tokens, and is not compatible with o1 series models.
          refs: https://platform.openai.com/docs/api-reference/chat/create#chat-create-max_tokens
        type: integer
      messages:
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionMessage'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: Metadata to store with the completion.
        type: object
      model:
        type: string
      "n":
        type: integer
      parallel_tool_calls:
        description: 'Disable the default behavior of parallel tool calls by setting
          it: false.'
      presence_penalty:
        type: number
      reasoning_effort:
        description: Controls effort on reasoning for reasoning models. It can be
          set to "low", "medium", or "high".
        type: string
      response_format:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionResponseFormat'
      seed:
        type: integer
      stop:
        items:
          type: string
        type: array
      store:
        description: |-
          Store can be set to true to store the output of this completion request for use in distillations and evals.
          https://platform.openai.com/docs/api-reference/chat/create#chat-create-store
        type: boolean
      stream:
        type: boolean
      stream_options:
        allOf:
        - $ref: '#/definitions/github_com_sashabaranov_go-openai.StreamOptions'
        description: 'Options for streaming response. Only set this when you set stream:
          true.'
      temperature:
        type: number
      tool_choice:
        description: This can be either a string or an ToolChoice object.
      tools:
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.Tool'
        type: array
      top_logprobs:
        description: |-
          TopLogProbs is an integer between 0 and 5 specifying the number of most likely tokens to return at each
          token position, each with an associated log probability.
          logprobs must be set to true if this parameter is used.
        type: integer
      top_p:
        type: number
      user:
        type: string
    type: object
  github_com_sashabaranov_go-openai.ChatCompletionResponse:
    properties:
      choices:
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionChoice'
        type: array
      created:
        type: integer
      id:
        type: string
      model:
        type: string
      object:
        type: string
      prompt_filter_results:
        items:
          $ref: '#/definitions/openai.PromptFilterResult'
        type: array
      system_fingerprint:
        type: string
      usage:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.Usage'
    type: object
  github_com_sashabaranov_go-openai.ChatCompletionResponseFormat:
    properties:
      json_schema:
        $ref: '#/definitions/openai.ChatCompletionResponseFormatJSONSchema'
      type:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionResponseFormatType'
    type: object
  github_com_sashabaranov_go-openai.ChatCompletionResponseFormatType:
    enum:
    - json_object
    - json_schema
    - text
    type: string
    x-enum-varnames:
    - ChatCompletionResponseFormatTypeJSONObject
    - ChatCompletionResponseFormatTypeJSONSchema
    - ChatCompletionResponseFormatTypeText
  github_com_sashabaranov_go-openai.ChatMessageImageURL:
    properties:
      detail:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ImageURLDetail'
      url:
        type: string
    type: object
  github_com_sashabaranov_go-openai.ChatMessagePart:
    properties:
      image_url:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatMessageImageURL'
      text:
        type: string
      type:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatMessagePartType'
    type: object
  github_com_sashabaranov_go-openai.ChatMessagePartType:
    enum:
    - text
    - image_url
    type: string
    x-enum-varnames:
    - ChatMessagePartTypeText
    - ChatMessagePartTypeImageURL
  github_com_sashabaranov_go-openai.ContentFilterResults:
    properties:
      hate:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.Hate'
      jailbreak:
        $ref: '#/definitions/openai.JailBreak'
      profanity:
        $ref: '#/definitions/openai.Profanity'
      self_harm:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.SelfHarm'
      sexual:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.Sexual'
      violence:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.Violence'
    type: object
  github_com_sashabaranov_go-openai.FinishReason:
    enum:
    - stop
    - length
    - function_call
    - tool_calls
    - content_filter
    - "null"
    type: string
    x-enum-varnames:
    - FinishReasonStop
    - FinishReasonLength
    - FinishReasonFunctionCall
    - FinishReasonToolCalls
    - FinishReasonContentFilter
    - FinishReasonNull
  github_com_sashabaranov_go-openai.FunctionCall:
    properties:
      arguments:
        description: call function with arguments in JSON format
        type: string
      name:
        type: string
    type: object
  github_com_sashabaranov_go-openai.FunctionDefinition:
    properties:
      description:
        type: string
      name:
        type: string
      parameters:
        description: |-
          Parameters is an object describing the function.
          You can pass json.RawMessage to describe the schema,
          or you can pass in a struct which serializes to the proper JSON schema.
          The jsonschema package is provided for convenience, but you should
          consider another specialized library if you require more complex schemas.
      strict:
        type: boolean
    type: object
  github_com_sashabaranov_go-openai.Hate:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  github_com_sashabaranov_go-openai.ImageURLDetail:
    enum:
    - high
    - low
    - auto
    type: string
    x-enum-varnames:
    - ImageURLDetailHigh
    - ImageURLDetailLow
    - ImageURLDetailAuto
  github_com_sashabaranov_go-openai.LogProb:
    properties:
      bytes:
        description: Omitting the field if it is null
        items:
          type: integer
        type: array
      logprob:
        type: number
      token:
        type: string
      top_logprobs:
        description: |-
          TopLogProbs is a list of the most likely tokens and their log probability, at this token position.
          In rare cases, there may be fewer than the number of requested top_logprobs returned.
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.TopLogProbs'
        type: array
    type: object
  github_com_sashabaranov_go-openai.LogProbs:
    properties:
      content:
        description: Content is a list of message content tokens with log probability
          information.
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.LogProb'
        type: array
    type: object
  github_com_sashabaranov_go-openai.SelfHarm:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  github_com_sashabaranov_go-openai.Sexual:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  github_com_sashabaranov_go-openai.StreamOptions:
    properties:
      include_usage:
        description: |-
          If set, an additional chunk will be streamed before the data: [DONE] message.
          The usage field on this chunk shows the token usage statistics for the entire request,
          and the choices field will always be an empty array.
          All other chunks will also include a usage field, but with a null value.
        type: boolean
    type: object
  github_com_sashabaranov_go-openai.Tool:
    properties:
      function:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.FunctionDefinition'
      type:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ToolType'
    type: object
  github_com_sashabaranov_go-openai.ToolCall:
    properties:
      function:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.FunctionCall'
      id:
        type: string
      index:
        description: Index is not nil only in chat completion chunk object
        type: integer
      type:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ToolType'
    type: object
  github_com_sashabaranov_go-openai.ToolType:
    enum:
    - function
    type: string
    x-enum-varnames:
    - ToolTypeFunction
  github_com_sashabaranov_go-openai.TopLogProbs:
    properties:
      bytes:
        items:
          type: integer
        type: array
      logprob:
        type: number
      token:
        type: string
    type: object
  github_com_sashabaranov_go-openai.Usage:
    properties:
      completion_tokens:
        type: integer
      completion_tokens_details:
        $ref: '#/definitions/openai.CompletionTokensDetails'
      prompt_tokens:
        type: integer
      prompt_tokens_details:
        $ref: '#/definitions/openai.PromptTokensDetails'
      total_tokens:
        type: integer
    type: object
  github_com_sashabaranov_go-openai.Violence:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  mcp.Meta:
    properties:
      additionalFields:
        additionalProperties: {}
        description: |-
          AdditionalFields are any fields present in the Meta that are not
          otherwise defined in the protocol.
        type: object
      progressToken:
        description: |-
          If specified, the caller is requesting out-of-band progress
          notifications for this request (as represented by
          notifications/progress). The value of this parameter is an
          opaque token that will be attached to any subsequent
          notifications. The receiver is not obligated to provide these
          notifications.
    type: object
  mcp.Tool:
    properties:
      _meta:
        allOf:
        - $ref: '#/definitions/mcp.Meta'
        description: Meta is a metadata object that is reserved by MCP for storing
          additional information.
      annotations:
        allOf:
        - $ref: '#/definitions/mcp.ToolAnnotation'
        description: Optional properties describing tool behavior
      description:
        description: A human-readable description of the tool.
        type: string
      inputSchema:
        allOf:
        - $ref: '#/definitions/mcp.ToolInputSchema'
        description: A JSON Schema object defining the expected parameters for the
          tool.
      name:
        description: The name of the tool.
        type: string
    type: object
  mcp.ToolAnnotation:
    properties:
      destructiveHint:
        description: If true, the tool may perform destructive updates
        type: boolean
      idempotentHint:
        description: If true, repeated calls with same args have no additional effect
        type: boolean
      openWorldHint:
        description: If true, tool interacts with external entities
        type: boolean
      readOnlyHint:
        description: If true, the tool does not modify its environment
        type: boolean
      title:
        description: Human-readable title for the tool
        type: string
    type: object
  mcp.ToolInputSchema:
    properties:
      $defs:
        additionalProperties: {}
        type: object
      properties:
        additionalProperties: {}
        type: object
      required:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  memory.EstimateOptions:
    properties:
      flash_attention:
        description: Advanced options
        type: boolean
      kv_cache_type:
        description: '"f16", "q8_0", "q4_0"'
        type: string
      num_batch:
        description: Batch size
        type: integer
      num_ctx:
        description: Context size
        type: integer
      num_gpu:
        description: |-
          ⚠️  CRITICAL CONFUSION WARNING ⚠️
          NumGPU is NOT the number of GPUs in your hardware configuration!
          NumGPU is the number of MODEL LAYERS to offload to GPU (-1 for auto-detect all that fit)

          Examples:
          - NumGPU = -1: Auto-detect max layers that fit (RECOMMENDED - gives full model memory)
          - NumGPU = 1:  Only offload 1 layer to GPU (gives tiny memory estimate)
          - NumGPU = 0:  CPU only (no GPU layers)

          To estimate for different GPU hardware configs (1 GPU vs 4 GPUs),
          you pass different GPU configuration arrays to the estimation function,
          NOT different NumGPU values!
        type: integer
      num_parallel:
        description: Number of parallel sequences
        type: integer
    type: object
  memory.GPUInfo:
    properties:
      compute:
        type: string
      dependency_path:
        items:
          type: string
        type: array
      driver_major:
        type: integer
      driver_minor:
        type: integer
      env_workarounds:
        items:
          items:
            type: string
          type: array
        type: array
      free_memory:
        type: integer
      id:
        type: string
      index:
        type: integer
      library:
        description: '"cuda", "rocm", "metal", "cpu"'
        type: string
      minimum_memory:
        type: integer
      name:
        type: string
      total_memory:
        type: integer
      unreliable_free_memory:
        type: boolean
      variant:
        description: Additional fields for compatibility with Ollama's estimation
        type: string
    type: object
  memory.MemoryEstimate:
    properties:
      architecture:
        description: Metadata
        type: string
      estimated_at:
        type: string
      fully_loaded:
        description: Whether all layers fit on GPU
        type: boolean
      gpu_sizes:
        description: Memory allocation per GPU
        items:
          type: integer
        type: array
      gpus:
        items:
          $ref: '#/definitions/memory.GPUInfo'
        type: array
      graph:
        description: Graph memory requirement
        type: integer
      graph_mem:
        description: Graph computation memory
        type: integer
      kv_cache:
        description: Breakdown for analysis
        type: integer
      layers:
        description: Core results
        type: integer
      model_path:
        type: string
      options:
        allOf:
        - $ref: '#/definitions/memory.EstimateOptions'
        description: Configuration used for estimation
      projectors:
        description: Projector weights (for multimodal)
        type: integer
      requires_fallback:
        description: Whether CPU fallback is needed
        type: boolean
      tensor_split:
        description: Layers per GPU for tensor parallel
        items:
          type: integer
        type: array
      total_size:
        description: Total memory requirement
        type: integer
      vram_size:
        description: Total VRAM usage
        type: integer
      weights:
        description: Model weights memory
        type: integer
    type: object
  openai.ChatCompletionResponseFormatJSONSchema:
    properties:
      description:
        type: string
      name:
        type: string
      schema: {}
      strict:
        type: boolean
    type: object
  openai.CompletionTokensDetails:
    properties:
      audio_tokens:
        type: integer
      reasoning_tokens:
        type: integer
    type: object
  openai.JailBreak:
    properties:
      detected:
        type: boolean
      filtered:
        type: boolean
    type: object
  openai.Profanity:
    properties:
      detected:
        type: boolean
      filtered:
        type: boolean
    type: object
  openai.PromptFilterResult:
    properties:
      content_filter_results:
        $ref: '#/definitions/github_com_sashabaranov_go-openai.ContentFilterResults'
      index:
        type: integer
    type: object
  openai.PromptTokensDetails:
    properties:
      audio_tokens:
        type: integer
      cached_tokens:
        type: integer
    type: object
  server.AppCreateResponse:
    properties:
      config:
        $ref: '#/definitions/types.AppConfig'
      created:
        type: string
      global:
        type: boolean
      id:
        type: string
      model_substitutions:
        items:
          $ref: '#/definitions/server.ModelSubstitution'
        type: array
      organization_id:
        type: string
      owner:
        description: uuid of user ID
        type: string
      owner_type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: e.g. user, system, org
      updated:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/types.User'
        description: Owner user struct, populated by the server for organization views
    type: object
  server.CreateTopUpRequest:
    properties:
      amount:
        type: number
      org_id:
        type: string
    type: object
  server.LicenseKeyRequest:
    properties:
      license_key:
        type: string
    type: object
  server.LogsSummary:
    properties:
      active_instances:
        type: integer
      error_retention_hours:
        type: integer
      instances_with_errors:
        type: integer
      max_lines_per_buffer:
        type: integer
      recent_errors:
        type: integer
      slots:
        items:
          $ref: '#/definitions/server.SlotLogSummary'
        type: array
    type: object
  server.ModelSubstitution:
    properties:
      assistant_name:
        type: string
      new_model:
        type: string
      new_provider:
        type: string
      original_model:
        type: string
      original_provider:
        type: string
      reason:
        type: string
    type: object
  server.SlotLogSummary:
    properties:
      has_logs:
        type: boolean
      id:
        type: string
      model:
        type: string
      runner_id:
        type: string
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  stripe.SubscriptionStatus:
    enum:
    - active
    - canceled
    - incomplete
    - incomplete_expired
    - past_due
    - paused
    - trialing
    - unpaid
    type: string
    x-enum-varnames:
    - SubscriptionStatusActive
    - SubscriptionStatusCanceled
    - SubscriptionStatusIncomplete
    - SubscriptionStatusIncompleteExpired
    - SubscriptionStatusPastDue
    - SubscriptionStatusPaused
    - SubscriptionStatusTrialing
    - SubscriptionStatusUnpaid
  system.HTTPError:
    properties:
      message:
        type: string
      statusCode:
        type: integer
    type: object
  types.APIKeyType:
    enum:
    - ""
    - api
    - app
    type: string
    x-enum-varnames:
    - APIkeytypeNone
    - APIkeytypeAPI
    - APIkeytypeApp
  types.AccessGrant:
    properties:
      created_at:
        type: string
      id:
        type: string
      organization_id:
        description: If granted to an organization
        type: string
      resource_id:
        description: App ID, Knowledge ID, etc
        type: string
      roles:
        items:
          $ref: '#/definitions/types.Role'
        type: array
      team_id:
        description: If granted to a team
        type: string
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/types.User'
        description: Populated by the server if UserID is set
      user_id:
        description: If granted to a user
        type: string
    type: object
  types.Action:
    enum:
    - Get
    - List
    - Delete
    - Update
    - Create
    - UseAction
    type: string
    x-enum-comments:
      ActionUseAction: For example "use app"
    x-enum-varnames:
    - ActionGet
    - ActionList
    - ActionDelete
    - ActionUpdate
    - ActionCreate
    - ActionUseAction
  types.AddOrganizationMemberRequest:
    properties:
      role:
        $ref: '#/definitions/types.OrganizationRole'
      user_reference:
        description: Either user ID or user email
        type: string
    type: object
  types.AddTeamMemberRequest:
    properties:
      user_reference:
        description: Either user ID or user email
        type: string
    type: object
  types.AggregatedUsageMetric:
    properties:
      completion_cost:
        type: number
      completion_tokens:
        type: integer
      date:
        description: ID    string    `json:"id" gorm:"primaryKey"`
        type: string
      latency_ms:
        type: number
      prompt_cost:
        type: number
      prompt_tokens:
        type: integer
      request_size_bytes:
        type: integer
      response_size_bytes:
        type: integer
      total_cost:
        description: Total cost of the call (prompt and completion tokens)
        type: number
      total_requests:
        type: integer
      total_tokens:
        type: integer
    type: object
  types.AllocationPlanView:
    properties:
      cost:
        type: integer
      evictions_needed:
        description: Slot IDs
        items:
          type: string
        type: array
      gpu_count:
        type: integer
      gpus:
        items:
          type: integer
        type: array
      id:
        type: string
      is_multi_gpu:
        type: boolean
      is_valid:
        type: boolean
      memory_per_gpu:
        type: integer
      requires_eviction:
        type: boolean
      runner_capacity:
        additionalProperties:
          type: integer
        description: GPU index -> total memory
        type: object
      runner_id:
        type: string
      runner_memory_state:
        additionalProperties:
          type: integer
        description: GPU index -> allocated memory
        type: object
      runtime:
        $ref: '#/definitions/types.Runtime'
      tensor_parallel_size:
        type: integer
      total_memory_required:
        type: integer
      validation_error:
        type: string
    type: object
  types.ApiKey:
    properties:
      app_id:
        $ref: '#/definitions/sql.NullString'
      created:
        type: string
      key:
        type: string
      name:
        type: string
      owner:
        type: string
      owner_type:
        $ref: '#/definitions/types.OwnerType'
      type:
        $ref: '#/definitions/types.APIKeyType'
    type: object
  types.App:
    properties:
      config:
        $ref: '#/definitions/types.AppConfig'
      created:
        type: string
      global:
        type: boolean
      id:
        type: string
      organization_id:
        type: string
      owner:
        description: uuid of user ID
        type: string
      owner_type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: e.g. user, system, org
      updated:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/types.User'
        description: Owner user struct, populated by the server for organization views
    type: object
  types.AppConfig:
    properties:
      allowed_domains:
        items:
          type: string
        type: array
      helix:
        $ref: '#/definitions/types.AppHelixConfig'
      secrets:
        additionalProperties:
          type: string
        type: object
    type: object
  types.AppHelixConfig:
    properties:
      assistants:
        items:
          $ref: '#/definitions/types.AssistantConfig'
        type: array
      avatar:
        type: string
      avatar_content_type:
        type: string
      description:
        type: string
      external_url:
        type: string
      image:
        type: string
      name:
        type: string
      triggers:
        items:
          $ref: '#/definitions/types.Trigger'
        type: array
    type: object
  types.AssistantAPI:
    properties:
      description:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      oauth_provider:
        description: OAuth configuration
        type: string
      oauth_scopes:
        description: Required OAuth scopes for this API
        items:
          type: string
        type: array
      path_params:
        additionalProperties:
          type: string
        type: object
      query:
        additionalProperties:
          type: string
        type: object
      request_prep_template:
        type: string
      response_error_template:
        type: string
      response_success_template:
        type: string
      schema:
        type: string
      skip_unknown_keys:
        description: |-
          if true, unknown keys in the response body will be removed before
          returning to the agent for interpretation
        type: boolean
      system_prompt:
        type: string
      transform_output:
        description: |-
          Transform JSON into readable text to reduce the
          size of the response body
        type: boolean
      url:
        type: string
    type: object
  types.AssistantAzureDevOps:
    properties:
      enabled:
        type: boolean
      organization_url:
        type: string
      personal_access_token:
        type: string
    type: object
  types.AssistantBrowser:
    properties:
      enabled:
        type: boolean
      markdown_post_processing:
        description: If true, the browser will return the HTML as markdown
        type: boolean
      process_output:
        description: If true, the browser will process the output of the tool call
          before returning it to the top loop. Useful for skills that return structured
          data such as Browser,
        type: boolean
    type: object
  types.AssistantCalculator:
    properties:
      enabled:
        type: boolean
    type: object
  types.AssistantConfig:
    properties:
      agent_mode:
        description: AgentMode triggers the use of the agent loop
        type: boolean
      apis:
        items:
          $ref: '#/definitions/types.AssistantAPI'
        type: array
      avatar:
        type: string
      azure_devops:
        $ref: '#/definitions/types.AssistantAzureDevOps'
      browser:
        $ref: '#/definitions/types.AssistantBrowser'
      calculator:
        $ref: '#/definitions/types.AssistantCalculator'
      context_limit:
        description: |-
          ContextLimit - the number of messages to include in the context for the AI assistant.
          When set to 1, the AI assistant will only see and remember the most recent message.
        type: integer
      conversation_starters:
        description: |-
          ConversationStarters is a list of messages that will be presented to the user
          when a new session is about to be launched. Use this to showcase the capabilities of the assistant.
        items:
          type: string
        type: array
      description:
        type: string
      email:
        $ref: '#/definitions/types.AssistantEmail'
      frequency_penalty:
        description: |-
          How much to penalize new tokens based on their frequency in the text so far.
          Increases the model's likelihood to talk about new topics
          0 - balanced
          2 - less repetitive
        type: number
      generation_model:
        type: string
      generation_model_provider:
        type: string
      gptscripts:
        items:
          $ref: '#/definitions/types.AssistantGPTScript'
        type: array
      id:
        type: string
      image:
        type: string
      is_actionable_history_length:
        description: Defaults to 4
        type: integer
      is_actionable_template:
        type: string
      knowledge:
        items:
          $ref: '#/definitions/types.AssistantKnowledge'
        type: array
      lora_id:
        type: string
      max_iterations:
        type: integer
      max_tokens:
        description: The maximum number of tokens to generate before stopping.
        type: integer
      mcps:
        items:
          $ref: '#/definitions/types.AssistantMCP'
        type: array
      memory:
        description: Enable/disable user based memory for the agent
        type: boolean
      model:
        type: string
      name:
        type: string
      presence_penalty:
        description: |-
          How much to penalize new tokens based on whether they appear in the text so far.
          Increases the model's likelihood to talk about new topics
          0 - balanced
          2 - open minded
        type: number
      provider:
        type: string
      rag_source_id:
        type: string
      reasoning_effort:
        description: Controls effort on reasoning for reasoning models. It can be
          set to "low", "medium", or "high".
        type: string
      reasoning_model:
        type: string
      reasoning_model_effort:
        type: string
      reasoning_model_provider:
        type: string
      small_generation_model:
        type: string
      small_generation_model_provider:
        type: string
      small_reasoning_model:
        type: string
      small_reasoning_model_effort:
        type: string
      small_reasoning_model_provider:
        type: string
      system_prompt:
        type: string
      temperature:
        description: |-
          Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
          0.01 - precise
          1 - neutral
          2 - creative
        type: number
      tests:
        items:
          properties:
            name:
              type: string
            steps:
              items:
                $ref: '#/definitions/types.TestStep'
              type: array
          type: object
        type: array
      tools:
        items:
          $ref: '#/definitions/github_com_helixml_helix_api_pkg_types.Tool'
        type: array
      top_p:
        description: |-
          An alternative to sampling with temperature, called nucleus sampling,
          where the model considers the results of the tokens with top_p probability mass.
          So 0.1 means only the tokens comprising the top 10% probability mass are considered.
          0 - balanced
          2 - more creative
        type: number
      web_search:
        $ref: '#/definitions/types.AssistantWebSearch'
      zapier:
        items:
          $ref: '#/definitions/types.AssistantZapier'
        type: array
    type: object
  types.AssistantEmail:
    properties:
      enabled:
        type: boolean
      template_example:
        type: string
    type: object
  types.AssistantGPTScript:
    properties:
      content:
        type: string
      description:
        description: When to use this tool (required)
        type: string
      file:
        type: string
      name:
        type: string
    type: object
  types.AssistantKnowledge:
    properties:
      description:
        description: |-
          Description of the knowledge, will be used in the prompt
          to explain the knowledge to the assistant
        type: string
      name:
        description: Name of the knowledge, will be unique within the Helix app
        type: string
      rag_settings:
        allOf:
        - $ref: '#/definitions/types.RAGSettings'
        description: |-
          RAGSettings defines the settings for the RAG system, how
          chunking is configured and where the index/query service is
          hosted.
      refresh_enabled:
        description: |-
          RefreshEnabled defines if the knowledge should be refreshed periodically
          or on events. For example a Google Drive knowledge can be refreshed
          every 24 hours.
        type: boolean
      refresh_schedule:
        description: |-
          RefreshSchedule defines the schedule for refreshing the knowledge.
          It can be specified in cron format or as a duration for example '@every 2h'
          or 'every 5m' or '0 0 * * *' for daily at midnight.
        type: string
      source:
        allOf:
        - $ref: '#/definitions/types.KnowledgeSource'
        description: |-
          Source defines where the raw data is fetched from. It can be
          directly uploaded files, S3, GCS, Google Drive, Gmail, etc.
    type: object
  types.AssistantMCP:
    properties:
      description:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      oauth_provider:
        description: The name of the OAuth provider to use for authentication
        type: string
      oauth_scopes:
        description: Required OAuth scopes for this API
        items:
          type: string
        type: array
      tools:
        items:
          $ref: '#/definitions/mcp.Tool'
        type: array
      url:
        type: string
    type: object
  types.AssistantWebSearch:
    properties:
      enabled:
        type: boolean
      max_results:
        type: integer
    type: object
  types.AssistantZapier:
    properties:
      api_key:
        type: string
      description:
        type: string
      max_iterations:
        type: integer
      model:
        type: string
      name:
        type: string
    type: object
  types.AuthenticatedResponse:
    properties:
      authenticated:
        type: boolean
    type: object
  types.AzureDevOpsTrigger:
    properties:
      enabled:
        type: boolean
    type: object
  types.ChatCompletionMessage:
    properties:
      content:
        type: string
      multiContent:
        items:
          $ref: '#/definitions/types.ChatMessagePart'
        type: array
      name:
        type: string
      role:
        type: string
      tool_call_id:
        description: For Role=tool prompts this should be set to the ID given in the
          assistant's prior request to call a tool.
        type: string
      tool_calls:
        description: For Role=assistant prompts this may be set to the tool calls
          generated by the model, such as function calls.
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ToolCall'
        type: array
    type: object
  types.ChatMessageImageURL:
    properties:
      detail:
        $ref: '#/definitions/types.ImageURLDetail'
      url:
        type: string
    type: object
  types.ChatMessagePart:
    properties:
      image_url:
        $ref: '#/definitions/types.ChatMessageImageURL'
      text:
        type: string
      type:
        $ref: '#/definitions/types.ChatMessagePartType'
    type: object
  types.ChatMessagePartType:
    enum:
    - text
    - image_url
    type: string
    x-enum-varnames:
    - ChatMessagePartTypeText
    - ChatMessagePartTypeImageURL
  types.Choice:
    properties:
      delta:
        $ref: '#/definitions/types.OpenAIMessage'
      finish_reason:
        type: string
      index:
        type: integer
      message:
        $ref: '#/definitions/types.OpenAIMessage'
      text:
        type: string
    type: object
  types.ContextMenuAction:
    properties:
      action_label:
        description: Forms the grouping in the UI
        type: string
      label:
        description: The label that will be shown in the UI
        type: string
      value:
        description: The value written to the text area when the action is selected
        type: string
    type: object
  types.ContextMenuResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/types.ContextMenuAction'
        type: array
    type: object
  types.CrawledSources:
    properties:
      urls:
        items:
          $ref: '#/definitions/types.CrawledURL'
        type: array
    type: object
  types.CrawledURL:
    properties:
      document_id:
        type: string
      duration_ms:
        type: integer
      message:
        type: string
      status_code:
        type: integer
      url:
        type: string
    type: object
  types.CreateAccessGrantRequest:
    properties:
      roles:
        description: Role names
        items:
          type: string
        type: array
      team_id:
        description: Team ID
        type: string
      user_reference:
        description: User ID or email
        type: string
    type: object
  types.CreateTeamRequest:
    properties:
      name:
        type: string
      organization_id:
        type: string
    type: object
  types.CronTrigger:
    properties:
      enabled:
        type: boolean
      input:
        type: string
      schedule:
        type: string
    type: object
  types.DashboardData:
    properties:
      global_allocation_decisions:
        items:
          $ref: '#/definitions/types.GlobalAllocationDecision'
        type: array
      queue:
        items:
          $ref: '#/definitions/types.WorkloadSummary'
        type: array
      runners:
        items:
          $ref: '#/definitions/types.DashboardRunner'
        type: array
      scheduling_decisions:
        items:
          $ref: '#/definitions/types.SchedulingDecision'
        type: array
    type: object
  types.DashboardRunner:
    properties:
      allocated_memory:
        type: integer
      created:
        type: string
      free_memory:
        type: integer
      gpu_count:
        description: Number of GPUs detected
        type: integer
      gpu_memory_stats:
        allOf:
        - $ref: '#/definitions/types.GPUMemoryStats'
        description: GPU memory stabilization statistics
      gpus:
        description: Per-GPU memory status
        items:
          $ref: '#/definitions/types.GPUStatus'
        type: array
      id:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      memory_string:
        type: string
      models:
        items:
          $ref: '#/definitions/types.RunnerModelStatus'
        type: array
      process_stats:
        description: Process tracking and cleanup statistics
      slots:
        items:
          $ref: '#/definitions/types.RunnerSlot'
        type: array
      total_memory:
        type: integer
      updated:
        type: string
      used_memory:
        type: integer
      version:
        type: string
    type: object
  types.DiscordTrigger:
    properties:
      server_name:
        type: string
    type: object
  types.DynamicModelInfo:
    properties:
      created:
        type: string
      id:
        type: string
      model_info:
        $ref: '#/definitions/types.ModelInfo'
      name:
        description: Model name
        type: string
      provider:
        description: helix, openai, etc. (Helix internal information)
        type: string
      updated:
        type: string
    type: object
  types.Effect:
    enum:
    - allow
    - deny
    type: string
    x-enum-varnames:
    - EffectAllow
    - EffectDeny
  types.Firecrawl:
    properties:
      api_key:
        type: string
      api_url:
        type: string
    type: object
  types.FlexibleEmbeddingRequest:
    properties:
      dimensions:
        type: integer
      encoding_format:
        type: string
      input:
        description: Can be string, []string, [][]int, etc.
      messages:
        description: For Chat Embeddings API format
        items:
          $ref: '#/definitions/types.ChatCompletionMessage'
        type: array
      model:
        type: string
    type: object
  types.FlexibleEmbeddingResponse:
    properties:
      data:
        items:
          properties:
            embedding:
              items:
                type: number
              type: array
            index:
              type: integer
            object:
              type: string
          type: object
        type: array
      model:
        type: string
      object:
        type: string
      usage:
        properties:
          prompt_tokens:
            type: integer
          total_tokens:
            type: integer
        type: object
    type: object
  types.FrontendLicenseInfo:
    properties:
      features:
        properties:
          users:
            type: boolean
        type: object
      limits:
        properties:
          machines:
            type: integer
          users:
            type: integer
        type: object
      organization:
        type: string
      valid:
        type: boolean
      valid_until:
        type: string
    type: object
  types.GPUMemoryDataPoint:
    properties:
      actual_free_mb:
        description: Actual free memory (from nvidia-smi)
        type: integer
      actual_total_mb:
        description: Total GPU memory
        type: integer
      actual_used_mb:
        description: Actual memory used (from nvidia-smi)
        type: integer
      allocated_mb:
        description: Memory allocated by Helix scheduler
        type: integer
      gpu_index:
        type: integer
      timestamp:
        type: string
    type: object
  types.GPUMemoryReading:
    properties:
      delta_mb:
        type: integer
      is_stable:
        type: boolean
      memory_mb:
        type: integer
      poll_number:
        type: integer
      stable_count:
        type: integer
    type: object
  types.GPUMemoryStabilizationEvent:
    properties:
      context:
        description: '"startup" or "deletion"'
        type: string
      error_message:
        type: string
      memory_delta_threshold_mb:
        type: integer
      memory_readings:
        items:
          $ref: '#/definitions/types.GPUMemoryReading'
        type: array
      poll_interval_ms:
        type: integer
      polls_taken:
        type: integer
      required_stable_polls:
        type: integer
      runtime:
        type: string
      slot_id:
        type: string
      stabilized_memory_mb:
        type: integer
      success:
        type: boolean
      timeout_seconds:
        type: integer
      timestamp:
        type: string
      total_wait_seconds:
        type: integer
    type: object
  types.GPUMemoryStats:
    properties:
      average_wait_time_seconds:
        type: number
      failed_stabilizations:
        type: integer
      last_stabilization:
        type: string
      max_wait_time_seconds:
        type: integer
      memory_time_series:
        description: Last 10 minutes of memory data
        items:
          $ref: '#/definitions/types.GPUMemoryDataPoint'
        type: array
      min_wait_time_seconds:
        type: integer
      recent_events:
        description: Last 20 events
        items:
          $ref: '#/definitions/types.GPUMemoryStabilizationEvent'
        type: array
      scheduling_events:
        description: Last 10 minutes of scheduling events
        items:
          $ref: '#/definitions/types.SchedulingEvent'
        type: array
      successful_stabilizations:
        type: integer
      total_stabilizations:
        type: integer
    type: object
  types.GPUState:
    properties:
      active_slots:
        description: Slot IDs using this GPU
        items:
          type: string
        type: array
      allocated_memory:
        type: integer
      free_memory:
        type: integer
      index:
        type: integer
      total_memory:
        type: integer
      utilization:
        description: 0.0 - 1.0
        type: number
    type: object
  types.GPUStatus:
    properties:
      cuda_version:
        description: CUDA version
        type: string
      driver_version:
        description: NVIDIA driver version
        type: string
      free_memory:
        description: Free memory in bytes
        type: integer
      index:
        description: GPU index (0, 1, 2, etc.)
        type: integer
      model_name:
        description: GPU model name (e.g., "NVIDIA H100 PCIe", "NVIDIA GeForce RTX
          4090")
        type: string
      total_memory:
        description: Total memory in bytes
        type: integer
      used_memory:
        description: Used memory in bytes
        type: integer
    type: object
  types.GlobalAllocationDecision:
    properties:
      after_state:
        additionalProperties:
          $ref: '#/definitions/types.RunnerStateView'
        type: object
      before_state:
        additionalProperties:
          $ref: '#/definitions/types.RunnerStateView'
        description: Global state snapshots
        type: object
      considered_plans:
        description: All plans considered
        items:
          $ref: '#/definitions/types.AllocationPlanView'
        type: array
      created:
        type: string
      error_message:
        type: string
      execution_time_ms:
        type: integer
      id:
        type: string
      model_name:
        type: string
      optimization_score:
        description: How optimal the final decision was
        type: number
      planning_time_ms:
        description: Timing information
        type: integer
      reason:
        type: string
      runtime:
        $ref: '#/definitions/types.Runtime'
      selected_plan:
        $ref: '#/definitions/types.AllocationPlanView'
      session_id:
        type: string
      success:
        description: Decision outcome
        type: boolean
      total_plans_generated:
        type: integer
      total_runners_evaluated:
        description: Decision metadata
        type: integer
      total_time_ms:
        type: integer
      workload_id:
        type: string
    type: object
  types.ImageURLDetail:
    enum:
    - high
    - low
    - auto
    type: string
    x-enum-varnames:
    - ImageURLDetailHigh
    - ImageURLDetailLow
    - ImageURLDetailAuto
  types.Interaction:
    properties:
      app_id:
        type: string
      completed:
        type: string
      created:
        type: string
      display_message:
        description: if this is defined, the UI will always display it instead of
          the message (so we can augment the internal prompt with RAG context)
        type: string
      duration_ms:
        description: How long the interaction took to complete in milliseconds
        type: integer
      error:
        type: string
      generation_id:
        description: |-
          GenerationID, starts at 0, increments for each regeneration (when user retries a message, anywhere from the past)
          it is used to keep a timeline when querying the database for messages or viewing previous generations
        type: integer
      id:
        type: string
      mode:
        $ref: '#/definitions/types.SessionMode'
      prompt_message:
        description: User prompt (text)
        type: string
      prompt_message_content:
        allOf:
        - $ref: '#/definitions/types.MessageContent'
        description: User prompt (multi-part)
      rag_results:
        items:
          $ref: '#/definitions/types.SessionRAGResult'
        type: array
      response_format:
        allOf:
        - $ref: '#/definitions/types.ResponseFormat'
        description: e.g. json
      response_format_response:
        description: e.g. json
        type: string
      response_message:
        description: |-
          TODO: add the full multi-part response content
          ResponseMessageContent MessageContent `json:"response_message_content"` // LLM response
        type: string
      runner:
        description: the ID of the runner that processed this interaction
        type: string
      scheduled:
        type: string
      session_id:
        type: string
      state:
        $ref: '#/definitions/types.InteractionState'
      status:
        type: string
      system_prompt:
        description: System prompt for the interaction (copy of the session's system
          prompt that was used to create this interaction)
        type: string
      tool_call_id:
        description: For Role=tool prompts this should be set to the ID given in the
          assistant's prior request to call a tool.
        type: string
      tool_calls:
        description: For Role=assistant prompts this may be set to the tool calls
          generated by the model, such as function calls.
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ToolCall'
        type: array
      tools:
        description: Model function calling, not to be mistaken with Helix tools
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.Tool'
        type: array
      updated:
        type: string
      usage:
        $ref: '#/definitions/github_com_helixml_helix_api_pkg_types.Usage'
      user_id:
        type: string
    type: object
  types.InteractionState:
    enum:
    - ""
    - waiting
    - editing
    - complete
    - error
    type: string
    x-enum-varnames:
    - InteractionStateNone
    - InteractionStateWaiting
    - InteractionStateEditing
    - InteractionStateComplete
    - InteractionStateError
  types.Item:
    properties:
      b64_json:
        type: string
      embedding:
        items:
          type: number
        type: array
      index:
        type: integer
      object:
        type: string
      url:
        description: Images
        type: string
    type: object
  types.Knowledge:
    properties:
      app_id:
        description: AppID through which the knowledge was created
        type: string
      crawled_sources:
        allOf:
        - $ref: '#/definitions/types.CrawledSources'
        description: URLs crawled in the last run (should match last knowledge version)
      created:
        type: string
      description:
        description: |-
          Description of the knowledge, will be used in the prompt
          to explain the knowledge to the assistant
        type: string
      id:
        type: string
      message:
        description: Set if something wrong happens
        type: string
      name:
        type: string
      next_run:
        description: Populated by the cron job controller
        type: string
      owner:
        description: User ID
        type: string
      owner_type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: e.g. user, system, org
      progress:
        allOf:
        - $ref: '#/definitions/types.KnowledgeProgress'
        description: Ephemeral state from knowledge controller
      rag_settings:
        $ref: '#/definitions/types.RAGSettings'
      refresh_enabled:
        description: |-
          RefreshEnabled defines if the knowledge should be refreshed periodically
          or on events. For example a Google Drive knowledge can be refreshed
          every 24 hours.
        type: boolean
      refresh_schedule:
        description: |-
          RefreshSchedule defines the schedule for refreshing the knowledge.
          It can be specified in cron format or as a duration for example '@every 2h'
          or 'every 5m' or '0 0 * * *' for daily at midnight.
        type: string
      size:
        description: Size of the knowledge in bytes
        type: integer
      source:
        allOf:
        - $ref: '#/definitions/types.KnowledgeSource'
        description: |-
          Source defines where the raw data is fetched from. It can be
          directly uploaded files, S3, GCS, Google Drive, Gmail, etc.
      state:
        $ref: '#/definitions/types.KnowledgeState'
      updated:
        type: string
      version:
        description: |-
          Version of the knowledge, will be used to separate different versions
          of the same knowledge when updating it. Format is
          YYYY-MM-DD-HH-MM-SS.
        type: string
      versions:
        items:
          $ref: '#/definitions/types.KnowledgeVersion'
        type: array
    type: object
  types.KnowledgeProgress:
    properties:
      elapsed_seconds:
        type: integer
      message:
        type: string
      progress:
        type: integer
      started_at:
        type: string
      step:
        type: string
    type: object
  types.KnowledgeSearchResult:
    properties:
      duration_ms:
        type: integer
      knowledge:
        $ref: '#/definitions/types.Knowledge'
      results:
        items:
          $ref: '#/definitions/types.SessionRAGResult'
        type: array
    type: object
  types.KnowledgeSource:
    properties:
      filestore:
        $ref: '#/definitions/types.KnowledgeSourceHelixFilestore'
      gcs:
        $ref: '#/definitions/types.KnowledgeSourceGCS'
      s3:
        $ref: '#/definitions/types.KnowledgeSourceS3'
      text:
        type: string
      web:
        $ref: '#/definitions/types.KnowledgeSourceWeb'
    type: object
  types.KnowledgeSourceGCS:
    properties:
      bucket:
        type: string
      path:
        type: string
    type: object
  types.KnowledgeSourceHelixFilestore:
    properties:
      path:
        type: string
      seed_zip_url:
        type: string
    type: object
  types.KnowledgeSourceS3:
    properties:
      bucket:
        type: string
      path:
        type: string
    type: object
  types.KnowledgeSourceWeb:
    properties:
      auth:
        $ref: '#/definitions/types.KnowledgeSourceWebAuth'
      crawler:
        allOf:
        - $ref: '#/definitions/types.WebsiteCrawler'
        description: Additional options for the crawler
      excludes:
        items:
          type: string
        type: array
      urls:
        items:
          type: string
        type: array
    type: object
  types.KnowledgeSourceWebAuth:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  types.KnowledgeState:
    enum:
    - preparing
    - pending
    - indexing
    - ready
    - error
    type: string
    x-enum-varnames:
    - KnowledgeStatePreparing
    - KnowledgeStatePending
    - KnowledgeStateIndexing
    - KnowledgeStateReady
    - KnowledgeStateError
  types.KnowledgeVersion:
    properties:
      crawled_sources:
        $ref: '#/definitions/types.CrawledSources'
      created:
        type: string
      embeddings_model:
        description: Model used to embed the knowledge
        type: string
      id:
        type: string
      knowledge_id:
        type: string
      message:
        description: Set if something wrong happens
        type: string
      provider:
        type: string
      size:
        type: integer
      state:
        $ref: '#/definitions/types.KnowledgeState'
      updated:
        type: string
      version:
        type: string
    type: object
  types.LLMCall:
    properties:
      app_id:
        type: string
      completion_cost:
        type: number
      completion_tokens:
        type: integer
      created:
        type: string
      duration_ms:
        type: integer
      error:
        type: string
      id:
        type: string
      interaction_id:
        type: string
      model:
        type: string
      organization_id:
        type: string
      original_request:
        items:
          type: integer
        type: array
      prompt_cost:
        type: number
      prompt_tokens:
        type: integer
      provider:
        type: string
      request:
        items:
          type: integer
        type: array
      response:
        items:
          type: integer
        type: array
      session_id:
        type: string
      step:
        $ref: '#/definitions/types.LLMCallStep'
      stream:
        type: boolean
      total_cost:
        description: Total cost of the call (prompt and completion tokens)
        type: number
      total_tokens:
        type: integer
      updated:
        type: string
      user_id:
        type: string
    type: object
  types.LLMCallStep:
    enum:
    - default
    - is_actionable
    - prepare_api_request
    - interpret_response
    - generate_title
    type: string
    x-enum-varnames:
    - LLMCallStepDefault
    - LLMCallStepIsActionable
    - LLMCallStepPrepareAPIRequest
    - LLMCallStepInterpretResponse
    - LLMCallStepGenerateTitle
  types.LoginRequest:
    properties:
      redirect_uri:
        type: string
    type: object
  types.Memory:
    properties:
      app_id:
        type: string
      contents:
        type: string
      created:
        type: string
      id:
        type: string
      updated:
        type: string
      user_id:
        type: string
    type: object
  types.Message:
    properties:
      content:
        $ref: '#/definitions/types.MessageContent'
      created_at:
        type: string
      id:
        description: Interaction ID
        type: string
      role:
        type: string
      state:
        $ref: '#/definitions/types.InteractionState'
      updated_at:
        type: string
    type: object
  types.MessageContent:
    properties:
      content_type:
        allOf:
        - $ref: '#/definitions/types.MessageContentType'
        description: text, image_url, multimodal_text
      parts:
        description: "Parts is a list of strings or objects. For example for text,
          it's a list of strings, for\nmulti-modal it can be an object:\n\"parts\":
          [\n\t\t{\n\t\t\t\t\"content_type\": \"image_asset_pointer\",\n\t\t\t\t\"asset_pointer\":
          \"file-service://file-28uHss2LgJ8HUEEVAnXa70Tg\",\n\t\t\t\t\"size_bytes\":
          185427,\n\t\t\t\t\"width\": 2048,\n\t\t\t\t\"height\": 1020,\n\t\t\t\t\"fovea\":
          null,\n\t\t\t\t\"metadata\": null\n\t\t},\n\t\t\"what is in the image?\"\n]"
        items: {}
        type: array
    type: object
  types.MessageContentType:
    enum:
    - text
    type: string
    x-enum-varnames:
    - MessageContentTypeText
  types.Modality:
    enum:
    - text
    - image
    - file
    type: string
    x-enum-varnames:
    - ModalityText
    - ModalityImage
    - ModalityFile
  types.Model:
    properties:
      allocated_gpu_count:
        type: integer
      allocated_memory:
        description: 'EXPORTED ALLOCATION FIELDS: Set by NewModelForGPUAllocation
          based on scheduler''s GPU allocation decision'
        type: integer
      allocated_per_gpu_memory:
        items:
          type: integer
        type: array
      allocated_specific_gpus:
        items:
          type: integer
        type: array
      allocation_configured:
        description: Safety flag
        type: boolean
      auto_pull:
        description: Whether to automatically pull the model if missing in the runner
        type: boolean
      concurrency:
        description: max concurrent requests per slot (0 = use global default)
        type: integer
      context_length:
        type: integer
      created:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      hide:
        type: boolean
      id:
        description: for example 'phi3.5:3.8b-mini-instruct-q8_0'
        type: string
      memory:
        description: 'DATABASE FIELD: Admin-configured memory for VLLM models, MUST
          be 0 for Ollama models'
        type: integer
      name:
        type: string
      prewarm:
        description: Whether to prewarm this model to fill free GPU memory on runners
        type: boolean
      runtime:
        $ref: '#/definitions/types.Runtime'
      runtime_args:
        additionalProperties: true
        description: Runtime-specific arguments (e.g., VLLM command line args)
        type: object
      sort_order:
        description: Order for sorting models in UI (lower numbers appear first)
        type: integer
      type:
        $ref: '#/definitions/types.ModelType'
      updated:
        type: string
      user_modified:
        description: User modification tracking - system defaults are automatically
          updated if this is false
        type: boolean
    type: object
  types.ModelInfo:
    properties:
      author:
        type: string
      context_length:
        type: integer
      description:
        type: string
      input_modalities:
        items:
          $ref: '#/definitions/types.Modality'
        type: array
      max_completion_tokens:
        type: integer
      name:
        type: string
      output_modalities:
        items:
          $ref: '#/definitions/types.Modality'
        type: array
      pricing:
        $ref: '#/definitions/types.Pricing'
      provider_model_id:
        type: string
      provider_slug:
        type: string
      slug:
        type: string
      supported_parameters:
        items:
          type: string
        type: array
      supports_reasoning:
        type: boolean
    type: object
  types.ModelType:
    enum:
    - chat
    - image
    - embed
    type: string
    x-enum-varnames:
    - ModelTypeChat
    - ModelTypeImage
    - ModelTypeEmbed
  types.OAuthConnection:
    properties:
      access_token:
        description: OAuth token fields
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      expires_at:
        type: string
      id:
        type: string
      metadata:
        type: string
      profile:
        $ref: '#/definitions/types.OAuthUserInfo'
      provider:
        allOf:
        - $ref: '#/definitions/types.OAuthProvider'
        description: Provider is a reference to the OAuth provider
      provider_id:
        type: string
      provider_user_email:
        type: string
      provider_user_id:
        description: User details from the provider
        type: string
      provider_username:
        type: string
      refresh_token:
        type: string
      scopes:
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  types.OAuthConnectionTestResult:
    properties:
      message:
        type: string
      provider_details:
        additionalProperties: {}
        description: Returned from the provider itself
        type: object
      success:
        type: boolean
    type: object
  types.OAuthProvider:
    properties:
      auth_url:
        description: OAuth 2.0 fields
        type: string
      callback_url:
        type: string
      client_id:
        description: Common fields for all providers
        type: string
      client_secret:
        type: string
      created_at:
        type: string
      creator_id:
        description: Who created/owns this provider
        type: string
      creator_type:
        $ref: '#/definitions/types.OwnerType'
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      discovery_url:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      name:
        type: string
      scopes:
        description: Misc configuration
        items:
          type: string
        type: array
      token_url:
        type: string
      type:
        $ref: '#/definitions/types.OAuthProviderType'
      updated_at:
        type: string
      user_info_url:
        type: string
    type: object
  types.OAuthProviderType:
    enum:
    - ""
    - atlassian
    - google
    - microsoft
    - github
    - slack
    - linkedin
    - hubspot
    - custom
    type: string
    x-enum-varnames:
    - OAuthProviderTypeUnknown
    - OAuthProviderTypeAtlassian
    - OAuthProviderTypeGoogle
    - OAuthProviderTypeMicrosoft
    - OAuthProviderTypeGitHub
    - OAuthProviderTypeSlack
    - OAuthProviderTypeLinkedIn
    - OAuthProviderTypeHubSpot
    - OAuthProviderTypeCustom
  types.OAuthUserInfo:
    properties:
      avatar_url:
        type: string
      display_name:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      raw:
        description: Raw JSON response from provider
        type: string
    type: object
  types.OpenAIMessage:
    properties:
      content:
        description: The message content
        type: string
      role:
        description: The message role
        type: string
      tool_call_id:
        description: For Role=tool prompts this should be set to the ID given in the
          assistant's prior request to call a tool.
        type: string
      tool_calls:
        description: For Role=assistant prompts this may be set to the tool calls
          generated by the model, such as function calls.
        items:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ToolCall'
        type: array
    type: object
  types.OpenAIModel:
    properties:
      context_length:
        type: integer
      created:
        type: integer
      description:
        type: string
      enabled:
        type: boolean
      hide:
        type: boolean
      id:
        type: string
      model_info:
        $ref: '#/definitions/types.ModelInfo'
      name:
        type: string
      object:
        type: string
      owned_by:
        type: string
      parent:
        type: string
      permission:
        items:
          $ref: '#/definitions/types.OpenAIPermission'
        type: array
      root:
        type: string
      type:
        type: string
    type: object
  types.OpenAIModelsList:
    properties:
      data:
        items:
          $ref: '#/definitions/types.OpenAIModel'
        type: array
    type: object
  types.OpenAIPermission:
    properties:
      allow_create_engine:
        type: boolean
      allow_fine_tuning:
        type: boolean
      allow_logprobs:
        type: boolean
      allow_sampling:
        type: boolean
      allow_search_indices:
        type: boolean
      allow_view:
        type: boolean
      created:
        type: integer
      group: {}
      id:
        type: string
      is_blocking:
        type: boolean
      object:
        type: string
      organization:
        type: string
    type: object
  types.OpenAIResponse:
    properties:
      choices:
        items:
          $ref: '#/definitions/types.Choice'
        type: array
      created:
        type: integer
      data:
        items:
          $ref: '#/definitions/types.Item'
        type: array
      id:
        type: string
      model:
        type: string
      object:
        type: string
      usage:
        $ref: '#/definitions/types.OpenAIUsage'
    type: object
  types.OpenAIUsage:
    properties:
      completion_tokens:
        type: integer
      prompt_tokens:
        type: integer
      total_tokens:
        type: integer
    type: object
  types.Organization:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      display_name:
        type: string
      id:
        type: string
      memberships:
        description: Memberships in the organization
        items:
          $ref: '#/definitions/types.OrganizationMembership'
        type: array
      name:
        type: string
      owner:
        description: Who created the org
        type: string
      roles:
        description: Roles in the organization
        items:
          $ref: '#/definitions/types.Role'
        type: array
      teams:
        description: Teams in the organization
        items:
          $ref: '#/definitions/types.Team'
        type: array
      updated_at:
        type: string
    type: object
  types.OrganizationMembership:
    properties:
      created_at:
        type: string
      organization_id:
        type: string
      role:
        allOf:
        - $ref: '#/definitions/types.OrganizationRole'
        description: Role - the role of the user in the organization (owner or member)
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      user_id:
        description: composite key
        type: string
    type: object
  types.OrganizationRole:
    enum:
    - owner
    - member
    type: string
    x-enum-comments:
      OrganizationRoleMember: Can see every member and team in the organization and
        can create new apps
      OrganizationRoleOwner: Has full administrative access to the entire organization.
    x-enum-varnames:
    - OrganizationRoleOwner
    - OrganizationRoleMember
  types.OwnerType:
    enum:
    - user
    - runner
    - system
    - socket
    - org
    type: string
    x-enum-varnames:
    - OwnerTypeUser
    - OwnerTypeRunner
    - OwnerTypeSystem
    - OwnerTypeSocket
    - OwnerTypeOrg
  types.PaginatedInteractions:
    properties:
      interactions:
        items:
          $ref: '#/definitions/types.Interaction'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      totalCount:
        type: integer
      totalPages:
        type: integer
    type: object
  types.PaginatedLLMCalls:
    properties:
      calls:
        items:
          $ref: '#/definitions/types.LLMCall'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      totalCount:
        type: integer
      totalPages:
        type: integer
    type: object
  types.PaginatedSessionsList:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
      sessions:
        items:
          $ref: '#/definitions/types.SessionSummary'
        type: array
      totalCount:
        type: integer
      totalPages:
        type: integer
    type: object
  types.Pricing:
    properties:
      audio:
        type: string
      completion:
        type: string
      image:
        type: string
      internal_reasoning:
        type: string
      prompt:
        type: string
      request:
        type: string
      web_search:
        type: string
    type: object
  types.Provider:
    enum:
    - openai
    - togetherai
    - anthropic
    - helix
    - vllm
    type: string
    x-enum-varnames:
    - ProviderOpenAI
    - ProviderTogetherAI
    - ProviderAnthropic
    - ProviderHelix
    - ProviderVLLM
  types.ProviderEndpoint:
    properties:
      api_key:
        type: string
      api_key_file:
        description: Must be mounted to the container
        type: string
      available_models:
        items:
          $ref: '#/definitions/types.OpenAIModel'
        type: array
      base_url:
        type: string
      billing_enabled:
        type: boolean
      created:
        type: string
      default:
        description: Set from environment variable
        type: boolean
      description:
        type: string
      endpoint_type:
        allOf:
        - $ref: '#/definitions/types.ProviderEndpointType'
        description: 'global, user (TODO: orgs, teams)'
      error:
        type: string
      headers:
        additionalProperties:
          type: string
        description: If for example anthropic expects x-api-key and anthropic-version
        type: object
      id:
        type: string
      models:
        description: Optional
        items:
          type: string
        type: array
      name:
        type: string
      owner:
        type: string
      owner_type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: user, system, org
      status:
        allOf:
        - $ref: '#/definitions/types.ProviderEndpointStatus'
        description: If we can't fetch models
      updated:
        type: string
    type: object
  types.ProviderEndpointStatus:
    enum:
    - ok
    - error
    - loading
    - disabled
    type: string
    x-enum-varnames:
    - ProviderEndpointStatusOK
    - ProviderEndpointStatusError
    - ProviderEndpointStatusLoading
    - ProviderEndpointStatusDisabled
  types.ProviderEndpointType:
    enum:
    - global
    - user
    - org
    - team
    type: string
    x-enum-varnames:
    - ProviderEndpointTypeGlobal
    - ProviderEndpointTypeUser
    - ProviderEndpointTypeOrg
    - ProviderEndpointTypeTeam
  types.RAGSettings:
    properties:
      chunk_overflow:
        description: the amount of overlap between chunks - will default to 32 bytes
        type: integer
      chunk_size:
        description: the size of each text chunk - will default to 2000 bytes
        type: integer
      delete_url:
        description: the URL of the delete endpoint (defaults to Helix RAG_DELETE_URL
          env var)
        type: string
      disable_chunking:
        description: if true, we will not chunk the text and send the entire file
          to the RAG indexing endpoint
        type: boolean
      disable_downloading:
        description: if true, we will not download the file and send the URL to the
          RAG indexing endpoint
        type: boolean
      distance_function:
        description: this is one of l2, inner_product or cosine - will default to
          cosine
        type: string
      enable_vision:
        description: if true, we will use the vision pipeline -- Future - might want
          to specify different pipelines
        type: boolean
      index_url:
        description: RAG endpoint configuration if used with a custom RAG service
        type: string
      prompt_template:
        description: the prompt template to use for the RAG query
        type: string
      query_url:
        description: the URL of the query endpoint (defaults to Helix RAG_QUERY_URL
          env var)
        type: string
      results_count:
        description: this is the max number of results to return - will default to
          3
        type: integer
      text_splitter:
        allOf:
        - $ref: '#/definitions/types.TextSplitterType'
        description: Markdown if empty or 'text'
      threshold:
        description: this is the threshold for a "good" answer - will default to 0.2
        type: number
      typesense:
        properties:
          api_key:
            type: string
          collection:
            type: string
          url:
            type: string
        type: object
    type: object
  types.Resource:
    enum:
    - Team
    - Organization
    - Role
    - Membership
    - MembershipRoleBinding
    - Application
    - AccessGrants
    - Knowledge
    - User
    - '*'
    - Dataset
    type: string
    x-enum-varnames:
    - ResourceTeam
    - ResourceOrganization
    - ResourceRole
    - ResourceMembership
    - ResourceMembershipRoleBinding
    - ResourceApplication
    - ResourceAccessGrants
    - ResourceKnowledge
    - ResourceUser
    - ResourceAny
    - ResourceTypeDataset
  types.ResponseFormat:
    properties:
      schema:
        $ref: '#/definitions/openai.ChatCompletionResponseFormatJSONSchema'
      type:
        $ref: '#/definitions/types.ResponseFormatType'
    type: object
  types.ResponseFormatType:
    enum:
    - json_object
    - text
    type: string
    x-enum-varnames:
    - ResponseFormatTypeJSONObject
    - ResponseFormatTypeText
  types.Role:
    properties:
      config:
        $ref: '#/definitions/github_com_helixml_helix_api_pkg_types.Config'
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      organization_id:
        type: string
      updated_at:
        type: string
    type: object
  types.Rule:
    properties:
      actions:
        items:
          $ref: '#/definitions/types.Action'
        type: array
      effect:
        $ref: '#/definitions/types.Effect'
      resource:
        items:
          $ref: '#/definitions/types.Resource'
        type: array
    type: object
  types.RunAPIActionRequest:
    properties:
      action:
        type: string
      parameters:
        additionalProperties: true
        type: object
    type: object
  types.RunAPIActionResponse:
    properties:
      error:
        type: string
      response:
        description: Raw response from the API
        type: string
    type: object
  types.RunnerModelStatus:
    properties:
      download_in_progress:
        type: boolean
      download_percent:
        type: integer
      error:
        type: string
      memory:
        description: Memory requirement in bytes
        type: integer
      model_id:
        type: string
      runtime:
        $ref: '#/definitions/types.Runtime'
    type: object
  types.RunnerSlot:
    properties:
      active:
        type: boolean
      active_requests:
        type: integer
      command_line:
        type: string
      context_length:
        type: integer
      created:
        type: string
      gpu_allocation_data:
        additionalProperties: {}
        type: object
      gpu_index:
        type: integer
      gpu_indices:
        items:
          type: integer
        type: array
      id:
        type: string
      max_concurrency:
        type: integer
      memory_estimation_meta:
        additionalProperties: {}
        type: object
      model:
        type: string
      model_memory_requirement:
        type: integer
      ready:
        type: boolean
      runner_id:
        type: string
      runtime:
        $ref: '#/definitions/types.Runtime'
      runtime_args:
        additionalProperties: {}
        type: object
      status:
        type: string
      tensor_parallel_size:
        type: integer
      updated:
        type: string
      version:
        type: string
      workload_data:
        additionalProperties: {}
        type: object
    type: object
  types.RunnerStateView:
    properties:
      active_slots:
        type: integer
      gpu_states:
        additionalProperties:
          $ref: '#/definitions/types.GPUState'
        description: GPU index -> state
        type: object
      is_connected:
        type: boolean
      runner_id:
        type: string
      total_slots:
        type: integer
      warm_slots:
        type: integer
    type: object
  types.Runtime:
    enum:
    - ollama
    - diffusers
    - axolotl
    - vllm
    type: string
    x-enum-varnames:
    - RuntimeOllama
    - RuntimeDiffusers
    - RuntimeAxolotl
    - RuntimeVLLM
  types.SchedulingDecision:
    properties:
      available_runners:
        items:
          type: string
        type: array
      created:
        type: string
      decision_type:
        $ref: '#/definitions/types.SchedulingDecisionType'
      id:
        type: string
      memory_available:
        type: integer
      memory_required:
        type: integer
      mode:
        $ref: '#/definitions/types.SessionMode'
      model_name:
        type: string
      processing_time_ms:
        type: integer
      queue_position:
        type: integer
      reason:
        type: string
      repeat_count:
        type: integer
      runner_id:
        type: string
      session_id:
        type: string
      slot_id:
        type: string
      success:
        type: boolean
      total_slot_count:
        type: integer
      warm_slot_count:
        type: integer
      workload_id:
        type: string
    type: object
  types.SchedulingDecisionType:
    enum:
    - queued
    - reuse_warm_slot
    - create_new_slot
    - evict_stale_slot
    - rejected
    - error
    - unschedulable
    type: string
    x-enum-comments:
      SchedulingDecisionTypeCreateNewSlot: Started new model instance
      SchedulingDecisionTypeError: Error during scheduling
      SchedulingDecisionTypeEvictStaleSlot: Evicted stale slot to free memory
      SchedulingDecisionTypeQueued: Added to queue
      SchedulingDecisionTypeRejected: Rejected (insufficient resources, etc.)
      SchedulingDecisionTypeReuseWarmSlot: Reused existing warm model instance
      SchedulingDecisionTypeUnschedulable: Cannot be scheduled (no warm slots available)
    x-enum-varnames:
    - SchedulingDecisionTypeQueued
    - SchedulingDecisionTypeReuseWarmSlot
    - SchedulingDecisionTypeCreateNewSlot
    - SchedulingDecisionTypeEvictStaleSlot
    - SchedulingDecisionTypeRejected
    - SchedulingDecisionTypeError
    - SchedulingDecisionTypeUnschedulable
  types.SchedulingEvent:
    properties:
      description:
        type: string
      event_type:
        description: '"slot_created", "slot_deleted", "eviction", "stabilization_start",
          "stabilization_end"'
        type: string
      gpu_indices:
        items:
          type: integer
        type: array
      memory_mb:
        type: integer
      model_name:
        type: string
      runtime:
        type: string
      slot_id:
        type: string
      timestamp:
        type: string
    type: object
  types.Secret:
    properties:
      app_id:
        description: optional, if set, the secret will be available to the specified
          app
        type: string
      created:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      ownerType:
        $ref: '#/definitions/types.OwnerType'
      updated:
        type: string
      value:
        items:
          type: integer
        type: array
    type: object
  types.ServerConfigForFrontend:
    properties:
      apps_enabled:
        type: boolean
      billing_enabled:
        description: Charging for usage
        type: boolean
      deployment_id:
        type: string
      disable_llm_call_logging:
        type: boolean
      eval_user_id:
        type: string
      filestore_prefix:
        description: |-
          used to prepend onto raw filestore paths to download files
          the filestore path will have the user info in it - i.e.
          it's a low level filestore path
          if we are using an object storage thing - then this URL
          can be the prefix to the bucket
        type: string
      google_analytics_frontend:
        type: string
      latest_version:
        type: string
      license:
        $ref: '#/definitions/types.FrontendLicenseInfo'
      organizations_create_enabled_for_non_admins:
        type: boolean
      rudderstack_data_plane_url:
        type: string
      rudderstack_write_key:
        type: string
      sentry_dsn_frontend:
        type: string
      stripe_enabled:
        description: Stripe top-ups enabled
        type: boolean
      tools_enabled:
        type: boolean
      version:
        type: string
    type: object
  types.Session:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/types.SessionMetadata'
        description: named config for backward compat
      created:
        type: string
      generation_id:
        description: Current generation ID
        type: integer
      id:
        type: string
      interactions:
        description: |-
          for now we just whack the entire history of the interaction in here, json
          style
        items:
          $ref: '#/definitions/types.Interaction'
        type: array
      lora_dir:
        description: |-
          if type == finetune, we record a filestore path to e.g. lora file here
          currently the only place you can do inference on a finetune is within the
          session where the finetune was generated
        type: string
      mode:
        allOf:
        - $ref: '#/definitions/types.SessionMode'
        description: e.g. inference, finetune
      model_name:
        type: string
      name:
        description: |-
          name that goes in the UI - ideally autogenerated by AI but for now can be
          named manually
        type: string
      organization_id:
        description: the organization this session belongs to, if any
        type: string
      owner:
        description: uuid of owner entity
        type: string
      owner_type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: e.g. user, system, org
      parent_app:
        description: |-
          the app this session was spawned from
          TODO: rename to AppID
        type: string
      parent_session:
        type: string
      provider:
        description: |-
          huggingface model name e.g. mistralai/Mistral-7B-Instruct-v0.1 or
          stabilityai/stable-diffusion-xl-base-1.0
        type: string
      type:
        allOf:
        - $ref: '#/definitions/types.SessionType'
        description: e.g. text, image
      updated:
        type: string
    type: object
  types.SessionChatRequest:
    properties:
      app_id:
        description: Assign the session settings from the specified app
        type: string
      assistant_id:
        description: Which assistant are we speaking to?
        type: string
      interaction_id:
        description: If empty, we will start a new interaction
        type: string
      lora_dir:
        type: string
      messages:
        description: Initial messages
        items:
          $ref: '#/definitions/types.Message'
        type: array
      model:
        description: The model to use
        type: string
      organization_id:
        description: The organization this session belongs to, if any
        type: string
      provider:
        allOf:
        - $ref: '#/definitions/types.Provider'
        description: The provider to use
      regenerate:
        description: If true, we will regenerate the response for the last message
        type: boolean
      session_id:
        description: If empty, we will start a new session
        type: string
      stream:
        description: If true, we will stream the response
        type: boolean
      system:
        description: System message, only applicable when starting a new session
        type: string
      tools:
        description: Available tools to use in the session
        items:
          type: string
        type: array
      type:
        allOf:
        - $ref: '#/definitions/types.SessionType'
        description: e.g. text, image
    type: object
  types.SessionMetadata:
    properties:
      active_tools:
        items:
          type: string
        type: array
      app_query_params:
        additionalProperties:
          type: string
        description: Passing through user defined app params
        type: object
      assistant_id:
        description: which assistant are we talking to?
        type: string
      avatar:
        type: string
      document_group_id:
        type: string
      document_ids:
        additionalProperties:
          type: string
        type: object
      eval_automatic_reason:
        type: string
      eval_automatic_score:
        type: string
      eval_manual_reason:
        type: string
      eval_manual_score:
        type: string
      eval_original_user_prompts:
        items:
          type: string
        type: array
      eval_run_id:
        description: |-
          Evals are cool. Scores are strings of floats so we can distinguish ""
          (not rated) from "0.0"
        type: string
      eval_user_reason:
        type: string
      eval_user_score:
        type: string
      helix_version:
        type: string
      manually_review_questions:
        type: boolean
      priority:
        type: boolean
      rag_enabled:
        description: |-
          these settings control which features of a session we want to use
          even if we have a Lora file and RAG indexed prepared
          we might choose to not use them (this will help our eval framework know what works the best)
          we well as activate RAG - we also get to control some properties, e.g. which distance function to use,
          and what the threshold for a "good" answer is
        type: boolean
      rag_settings:
        $ref: '#/definitions/types.RAGSettings'
      session_rag_results:
        items:
          $ref: '#/definitions/types.SessionRAGResult'
        type: array
      stream:
        type: boolean
      system_prompt:
        type: string
      text_finetune_enabled:
        description: without any user input, this will default to true
        type: boolean
      uploaded_data_entity_id:
        description: when we do fine tuning or RAG, we need to know which data entity
          we used
        type: string
    type: object
  types.SessionMode:
    enum:
    - ""
    - inference
    - finetune
    - action
    type: string
    x-enum-comments:
      SessionModeAction: Running tool actions (e.g. API, function calls)
    x-enum-varnames:
    - SessionModeNone
    - SessionModeInference
    - SessionModeFinetune
    - SessionModeAction
  types.SessionRAGResult:
    properties:
      content:
        type: string
      content_offset:
        type: integer
      distance:
        type: number
      document_group_id:
        type: string
      document_id:
        type: string
      filename:
        type: string
      id:
        type: string
      interaction_id:
        type: string
      metadata:
        additionalProperties:
          type: string
        type: object
      session_id:
        type: string
      source:
        type: string
    type: object
  types.SessionSummary:
    properties:
      app_id:
        type: string
      created:
        description: these are all values of the last interaction
        type: string
      model_name:
        description: InteractionID string      `json:"interaction_id"`
        type: string
      name:
        type: string
      organization_id:
        type: string
      owner:
        type: string
      priority:
        type: boolean
      session_id:
        type: string
      summary:
        description: this is either the prompt or the summary of the training data
        type: string
      type:
        $ref: '#/definitions/types.SessionType'
      updated:
        type: string
    type: object
  types.SessionType:
    enum:
    - ""
    - text
    - image
    type: string
    x-enum-varnames:
    - SessionTypeNone
    - SessionTypeText
    - SessionTypeImage
  types.SkillDefinition:
    properties:
      baseUrl:
        description: API configuration
        type: string
      category:
        type: string
      configurable:
        description: Metadata
        type: boolean
      description:
        type: string
      displayName:
        type: string
      filePath:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      icon:
        $ref: '#/definitions/types.SkillIcon'
      id:
        type: string
      loadedAt:
        type: string
      name:
        type: string
      oauthProvider:
        description: OAuth configuration
        type: string
      oauthScopes:
        items:
          type: string
        type: array
      provider:
        type: string
      requiredParameters:
        items:
          $ref: '#/definitions/types.SkillRequiredParameter'
        type: array
      schema:
        type: string
      skipUnknownKeys:
        description: |-
          if true, unknown keys in the response body will be removed before
          returning to the agent for interpretation
        type: boolean
      systemPrompt:
        type: string
      transformOutput:
        description: |-
          Transform JSON into readable text to reduce the
          size of the response body
        type: boolean
    type: object
  types.SkillIcon:
    properties:
      name:
        description: e.g., "GitHub", "Google"
        type: string
      type:
        description: e.g., "material-ui", "custom"
        type: string
    type: object
  types.SkillRequiredParameter:
    properties:
      description:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        description: '"query", "header", "path"'
        type: string
    type: object
  types.SkillsListResponse:
    properties:
      count:
        type: integer
      skills:
        items:
          $ref: '#/definitions/types.SkillDefinition'
        type: array
    type: object
  types.SlackTrigger:
    properties:
      app_token:
        type: string
      bot_token:
        type: string
      channels:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  types.StepInfo:
    properties:
      app_id:
        type: string
      created:
        type: string
      details:
        allOf:
        - $ref: '#/definitions/types.StepInfoDetails'
        description: That were used to call the tool
      duration_ms:
        description: How long the step took in milliseconds (useful for API calls,
          database queries, etc.)
        type: integer
      error:
        type: string
      icon:
        description: Either Material UI icon, emoji or SVG. Leave empty for default
        type: string
      id:
        type: string
      interaction_id:
        type: string
      message:
        type: string
      name:
        type: string
      session_id:
        type: string
      type:
        type: string
      updated:
        type: string
    type: object
  types.StepInfoDetails:
    properties:
      arguments:
        additionalProperties: true
        type: object
    type: object
  types.SystemSettingsRequest:
    properties:
      huggingface_token:
        type: string
    type: object
  types.SystemSettingsResponse:
    properties:
      created:
        type: string
      huggingface_token_set:
        description: Sensitive fields are masked
        type: boolean
      huggingface_token_source:
        description: '"database", "environment", or "none"'
        type: string
      id:
        type: string
      updated:
        type: string
    type: object
  types.Team:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: string
      memberships:
        description: Memberships in the team
        items:
          $ref: '#/definitions/types.TeamMembership'
        type: array
      name:
        type: string
      organization_id:
        type: string
      updated_at:
        type: string
    type: object
  types.TeamMembership:
    properties:
      created_at:
        type: string
      organization_id:
        type: string
      team:
        $ref: '#/definitions/types.Team'
      team_id:
        type: string
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/types.User'
        description: extra data fields (optional)
      user_id:
        description: composite key
        type: string
    type: object
  types.TestStep:
    properties:
      expected_output:
        type: string
      prompt:
        type: string
    type: object
  types.TextSplitterType:
    enum:
    - markdown
    - text
    type: string
    x-enum-varnames:
    - TextSplitterTypeMarkdown
    - TextSplitterTypeText
  types.TokenType:
    enum:
    - ""
    - runner
    - keycloak
    - oidc
    - api_key
    - socket
    type: string
    x-enum-varnames:
    - TokenTypeNone
    - TokenTypeRunner
    - TokenTypeKeycloak
    - TokenTypeOIDC
    - TokenTypeAPIKey
    - TokenTypeSocket
  types.ToolAPIAction:
    properties:
      description:
        type: string
      method:
        type: string
      name:
        type: string
      path:
        type: string
    type: object
  types.ToolAPIConfig:
    properties:
      actions:
        description: Read-only, parsed from schema on creation
        items:
          $ref: '#/definitions/types.ToolAPIAction'
        type: array
      headers:
        additionalProperties:
          type: string
        description: Headers (authentication, etc)
        type: object
      model:
        type: string
      oauth_provider:
        description: OAuth configuration
        type: string
      oauth_scopes:
        description: Required OAuth scopes for this API
        items:
          type: string
        type: array
      path_params:
        additionalProperties:
          type: string
        description: Path parameters that will be substituted in URLs
        type: object
      query:
        additionalProperties:
          type: string
        description: Query parameters that will be always set
        type: object
      request_prep_template:
        description: Template for request preparation, leave empty for default
        type: string
      response_error_template:
        description: Template for error response, leave empty for default
        type: string
      response_success_template:
        description: Template for successful response, leave empty for default
        type: string
      schema:
        type: string
      skip_unknown_keys:
        description: |-
          if true, unknown keys in the response body will be removed before
          returning to the agent for interpretation
        type: boolean
      system_prompt:
        description: System prompt to guide the AI when using this API
        type: string
      transform_output:
        description: |-
          Transform JSON into readable text to reduce the
          size of the response body
        type: boolean
      url:
        description: Server override
        type: string
    type: object
  types.ToolAzureDevOpsConfig:
    properties:
      enabled:
        type: boolean
      organization_url:
        type: string
      personal_access_token:
        type: string
    type: object
  types.ToolBrowserConfig:
    properties:
      enabled:
        type: boolean
      markdown_post_processing:
        description: If true, the browser will return the HTML as markdown
        type: boolean
      process_output:
        description: If true, the browser will process the output of the tool call
          before returning it to the top loop. Useful for skills that return structured
          data such as Browser,
        type: boolean
    type: object
  types.ToolCalculatorConfig:
    properties:
      enabled:
        type: boolean
    type: object
  types.ToolConfig:
    properties:
      api:
        $ref: '#/definitions/types.ToolAPIConfig'
      azure_devops:
        $ref: '#/definitions/types.ToolAzureDevOpsConfig'
      browser:
        $ref: '#/definitions/types.ToolBrowserConfig'
      calculator:
        $ref: '#/definitions/types.ToolCalculatorConfig'
      email:
        $ref: '#/definitions/types.ToolEmailConfig'
      gptscript:
        $ref: '#/definitions/types.ToolGPTScriptConfig'
      mcp:
        $ref: '#/definitions/types.ToolMCPClientConfig'
      web_search:
        $ref: '#/definitions/types.ToolWebSearchConfig'
      zapier:
        $ref: '#/definitions/types.ToolZapierConfig'
    type: object
  types.ToolEmailConfig:
    properties:
      enabled:
        type: boolean
      template_example:
        type: string
    type: object
  types.ToolGPTScriptConfig:
    properties:
      script:
        description: Program code
        type: string
      script_url:
        description: URL to download the script
        type: string
    type: object
  types.ToolMCPClientConfig:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      headers:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      oauth_provider:
        type: string
      oauth_scopes:
        description: Required OAuth scopes for this API
        items:
          type: string
        type: array
      tools:
        items:
          $ref: '#/definitions/mcp.Tool'
        type: array
      url:
        type: string
    type: object
  types.ToolWebSearchConfig:
    properties:
      enabled:
        type: boolean
      max_results:
        type: integer
    type: object
  types.ToolZapierConfig:
    properties:
      api_key:
        type: string
      max_iterations:
        type: integer
      model:
        type: string
    type: object
  types.Trigger:
    properties:
      azure_devops:
        $ref: '#/definitions/types.AzureDevOpsTrigger'
      cron:
        $ref: '#/definitions/types.CronTrigger'
      discord:
        $ref: '#/definitions/types.DiscordTrigger'
      slack:
        $ref: '#/definitions/types.SlackTrigger'
    type: object
  types.TriggerConfiguration:
    properties:
      app_id:
        description: App ID
        type: string
      archived:
        type: boolean
      created:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      name:
        description: Name of the trigger configuration
        type: string
      ok:
        type: boolean
      organization_id:
        description: Organization ID
        type: string
      owner:
        description: User ID
        type: string
      owner_type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: User or Organization
      status:
        type: string
      trigger:
        $ref: '#/definitions/types.Trigger'
      trigger_type:
        $ref: '#/definitions/types.TriggerType'
      updated:
        type: string
      webhook_url:
        description: Webhook URL for the trigger configuration, applicable to webhook
          type triggers like Azure DevOps, GitHub, etc.
        type: string
    type: object
  types.TriggerExecuteResponse:
    properties:
      content:
        type: string
      session_id:
        type: string
    type: object
  types.TriggerExecution:
    properties:
      created:
        type: string
      duration_ms:
        type: integer
      error:
        type: string
      id:
        type: string
      name:
        description: Will most likely match session name, based on the trigger name
          at the time of execution
        type: string
      output:
        type: string
      session_id:
        type: string
      status:
        $ref: '#/definitions/types.TriggerExecutionStatus'
      trigger_configuration_id:
        type: string
      updated:
        type: string
    type: object
  types.TriggerExecutionStatus:
    enum:
    - pending
    - running
    - success
    - error
    type: string
    x-enum-varnames:
    - TriggerExecutionStatusPending
    - TriggerExecutionStatusRunning
    - TriggerExecutionStatusSuccess
    - TriggerExecutionStatusError
  types.TriggerStatus:
    properties:
      message:
        type: string
      ok:
        type: boolean
      type:
        $ref: '#/definitions/types.TriggerType'
    type: object
  types.TriggerType:
    enum:
    - slack
    - azure_devops
    - cron
    type: string
    x-enum-varnames:
    - TriggerTypeSlack
    - TriggerTypeAzureDevOps
    - TriggerTypeCron
  types.UpdateOrganizationMemberRequest:
    properties:
      role:
        $ref: '#/definitions/types.OrganizationRole'
    type: object
  types.UpdateProviderEndpoint:
    properties:
      api_key:
        type: string
      api_key_file:
        description: Must be mounted to the container
        type: string
      base_url:
        type: string
      description:
        type: string
      endpoint_type:
        allOf:
        - $ref: '#/definitions/types.ProviderEndpointType'
        description: 'global, user (TODO: orgs, teams)'
      models:
        items:
          type: string
        type: array
    type: object
  types.UpdateTeamRequest:
    properties:
      name:
        type: string
    type: object
  types.User:
    properties:
      admin:
        description: if the ID of the user is contained in the env setting
        type: boolean
      app_id:
        description: if the token is associated with an app
        type: string
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      token:
        description: the actual token used and its type
        type: string
      token_type:
        allOf:
        - $ref: '#/definitions/types.TokenType'
        description: none, runner. keycloak, api_key
      type:
        allOf:
        - $ref: '#/definitions/types.OwnerType'
        description: |-
          these are set by the keycloak user based on the token
          if it's an app token - the keycloak user is loaded from the owner of the app
          if it's a runner token - these values will be empty
      updated_at:
        type: string
      username:
        type: string
    type: object
  types.UserAppAccessResponse:
    properties:
      can_read:
        type: boolean
      can_write:
        type: boolean
      is_admin:
        type: boolean
    type: object
  types.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      token:
        type: string
    type: object
  types.UserSearchResponse:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total_count:
        type: integer
      users:
        items:
          $ref: '#/definitions/types.User'
        type: array
    type: object
  types.UserTokenUsageResponse:
    properties:
      is_pro_tier:
        type: boolean
      monthly_limit:
        type: integer
      monthly_usage:
        type: integer
      quotas_enabled:
        type: boolean
      usage_percentage:
        type: number
    type: object
  types.UsersAggregatedUsageMetric:
    properties:
      metrics:
        items:
          $ref: '#/definitions/types.AggregatedUsageMetric'
        type: array
      user:
        $ref: '#/definitions/types.User'
    type: object
  types.Wallet:
    properties:
      balance:
        type: number
      created_at:
        type: string
      id:
        type: string
      org_id:
        description: If belongs to an organization
        type: string
      stripe_customer_id:
        type: string
      stripe_subscription_id:
        type: string
      subscription_created:
        type: integer
      subscription_current_period_end:
        type: integer
      subscription_current_period_start:
        type: integer
      subscription_status:
        $ref: '#/definitions/stripe.SubscriptionStatus'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  types.WebsiteCrawler:
    properties:
      enabled:
        type: boolean
      firecrawl:
        $ref: '#/definitions/types.Firecrawl'
      ignore_robots_txt:
        type: boolean
      max_depth:
        description: Limit crawl depth to avoid infinite crawling
        type: integer
      readability:
        description: Apply readability middleware to the HTML content
        type: boolean
      user_agent:
        type: string
    type: object
  types.WorkloadSummary:
    properties:
      created:
        type: string
      id:
        type: string
      lora_dir:
        type: string
      mode:
        type: string
      model_name:
        type: string
      runtime:
        type: string
      summary:
        type: string
      updated:
        type: string
    type: object
host: app.helix.ml
info:
  contact:
    email: info@helix.ml
    name: Helix support
    url: https://app.helix.ml/
  description: This is the HelixML API.
  title: HelixML API reference
  version: "0.1"
  x-logo:
    altText: Helix logo
    url: https://avatars.githubusercontent.com/u/149581110?s=200&v=4
paths:
  /api/v1/api_keys:
    delete:
      description: Delete an API key
      parameters:
      - description: API key to delete
        in: query
        name: key
        required: true
        type: string
      responses:
        "200":
          description: API key
          schema:
            type: string
      summary: Delete an API key
      tags:
      - api-keys
    get:
      description: Get API keys
      parameters:
      - description: Filter by types (comma-separated list)
        in: query
        name: types
        type: string
      - description: Filter by app ID
        in: query
        name: app_id
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.ApiKey'
            type: array
      security:
      - BearerAuth: []
      summary: Get API keys
      tags:
      - api-keys
    post:
      description: Create a new API key
      parameters:
      - description: Request body with name and type
        in: body
        name: request
        required: true
        schema:
          additionalProperties: true
          type: object
      responses:
        "200":
          description: API key
          schema:
            type: string
      summary: Create a new API key
      tags:
      - api-keys
  /api/v1/apps:
    get:
      description: List apps for the user. Apps are pre-configured to spawn sessions
        with specific tools and config.
      parameters:
      - description: Organization ID
        in: query
        name: organization_id
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.App'
            type: array
      security:
      - BearerAuth: []
      summary: List apps
      tags:
      - apps
    post:
      parameters:
      - description: Request body with app configuration. Can be legacy App format
          or structured format with organization_id, global, and yaml_config fields.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.App'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.AppCreateResponse'
      security:
      - BearerAuth: []
  /api/v1/apps/{app_id}/triggers:
    get:
      description: List triggers for the app
      parameters:
      - description: App ID
        in: path
        name: app_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.TriggerConfiguration'
            type: array
      security:
      - BearerAuth: []
      summary: List app triggers
      tags:
      - apps
  /api/v1/apps/{id}:
    delete:
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
    get:
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.App'
      security:
      - BearerAuth: []
    put:
      parameters:
      - description: Request body with app configuration.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.App'
      - description: Tool ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.App'
      security:
      - BearerAuth: []
  /api/v1/apps/{id}/access-grants:
    get:
      description: List access grants for an app (organization owners and members
        can list access grants)
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.AccessGrant'
            type: array
      security:
      - BearerAuth: []
      summary: List app access grants
      tags:
      - apps
    post:
      description: Grant access to an agent to a team or organization member (organization
        owners can grant access to teams and organization members)
      parameters:
      - description: Request body with team or organization member ID and role
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateAccessGrantRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.AccessGrant'
      security:
      - BearerAuth: []
      summary: Grant access to an agent to a team or organization member
      tags:
      - apps
  /api/v1/apps/{id}/api-actions:
    post:
      consumes:
      - application/json
      description: Runs an API action for an app
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.RunAPIActionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.RunAPIActionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Run an API action
  /api/v1/apps/{id}/avatar:
    delete:
      description: Delete the app's avatar image
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Delete app avatar
      tags:
      - apps
    get:
      description: Get the app's avatar image
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: Avatar image data
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Get app avatar
      tags:
      - apps
    post:
      consumes:
      - text/plain
      description: Upload a base64 encoded image as the app's avatar
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      - description: Base64 encoded image data
        in: body
        name: image
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Upload app avatar
      tags:
      - apps
  /api/v1/apps/{id}/daily-usage:
    get:
      consumes:
      - application/json
      description: Get app daily usage
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      - description: Start date
        in: query
        name: from
        type: string
      - description: End date
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.AggregatedUsageMetric'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Get app usage
      tags:
      - apps
  /api/v1/apps/{id}/duplicate:
    post:
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      - description: Optional new name for the app
        in: query
        name: name
        type: string
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
  /api/v1/apps/{id}/interactions:
    get:
      description: List interactions with pagination and optional session filtering
        for a specific app
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Filter by session ID
        in: query
        name: session
        type: string
      - description: Filter by interaction ID
        in: query
        name: interaction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PaginatedInteractions'
      security:
      - BearerAuth: []
      summary: List interactions
      tags:
      - interactions
  /api/v1/apps/{id}/llm-calls:
    get:
      description: List user's LLM calls with pagination and optional session filtering
        for a specific app
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Filter by session ID
        in: query
        name: session
        type: string
      - description: Filter by interaction ID
        in: query
        name: interaction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PaginatedLLMCalls'
      security:
      - BearerAuth: []
      summary: List LLM calls
      tags:
      - llm_calls
  /api/v1/apps/{id}/memories:
    get:
      description: List memories for a specific app and user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Memory'
            type: array
      security:
      - BearerAuth: []
      summary: List app memories
      tags:
      - memories
  /api/v1/apps/{id}/memories/{memory_id}:
    delete:
      description: Delete a specific memory for an app and user
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      - description: Memory ID
        in: path
        name: memory_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Delete app memory
      tags:
      - memories
  /api/v1/apps/{id}/step-info:
    get:
      description: List step info for a specific app and interaction ID, used to build
        the timeline of events
      parameters:
      - description: Interaction ID
        in: query
        name: interactionId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.StepInfo'
            type: array
      security:
      - BearerAuth: []
      summary: List step info
      tags:
      - step_info
  /api/v1/apps/{id}/trigger-status:
    get:
      description: Get the status of a specific trigger type for an app
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      - description: Trigger type (e.g., slack)
        in: query
        name: trigger_type
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TriggerStatus'
      security:
      - BearerAuth: []
      summary: Get app trigger status
      tags:
      - apps
  /api/v1/apps/{id}/user-access:
    get:
      description: Returns the access rights the current user has for this app
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserAppAccessResponse'
      security:
      - BearerAuth: []
      summary: Get current user's access level for an app
      tags:
      - apps
  /api/v1/apps/{id}/users-daily-usage:
    get:
      consumes:
      - application/json
      description: Get app users daily usage
      parameters:
      - description: App ID
        in: path
        name: id
        required: true
        type: string
      - description: Start date
        in: query
        name: from
        type: string
      - description: End date
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.AggregatedUsageMetric'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Get app users daily usage
      tags:
      - apps
  /api/v1/auth/authenticated:
    get:
      description: Check if the user is authenticated
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.AuthenticatedResponse'
      summary: Authenticated
      tags:
      - auth
  /api/v1/auth/callback:
    get:
      description: The callback receiver from the OIDC provider
      parameters:
      - description: The code from the OIDC provider
        in: query
        name: code
        required: true
        type: string
      - description: The state from the OIDC provider
        in: query
        name: state
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Callback from OIDC provider
      tags:
      - auth
  /api/v1/auth/login:
    post:
      description: Login to the application
      parameters:
      - description: Request body with redirect URI.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.LoginRequest'
      responses:
        "200":
          description: OK
      summary: Login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      description: Logout the user
      responses:
        "200":
          description: OK
      summary: Logout
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      description: Refresh the access token
      responses:
        "204":
          description: No Content
      summary: Refresh the access token
      tags:
      - auth
  /api/v1/auth/user:
    get:
      description: Get the current user's information
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserResponse'
      summary: User information
      tags:
      - auth
  /api/v1/config:
    get:
      description: Get config
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ServerConfigForFrontend'
      security:
      - BearerAuth: []
      summary: Get config
      tags:
      - config
  /api/v1/context-menu:
    get:
      description: contextMenuHandler
      parameters:
      - description: App ID
        in: query
        name: app_id
        required: true
        type: string
      - description: Query string
        in: query
        name: q
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ContextMenuResponse'
      summary: contextMenuHandler
      tags:
      - ui
  /api/v1/dashboard:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DashboardData'
      security:
      - BearerAuth: []
  /api/v1/filestore/config:
    get:
      consumes:
      - application/json
      description: Get the filestore configuration including user prefix and available
        folders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filestore.Config'
      security:
      - BearerAuth: []
      summary: Get filestore configuration
      tags:
      - filestore
  /api/v1/filestore/delete:
    delete:
      consumes:
      - application/json
      description: Delete a file or folder from the filestore
      parameters:
      - description: Path to the file or folder to delete
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Path of the deleted item
          schema:
            properties:
              path:
                type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete filestore item
      tags:
      - filestore
  /api/v1/filestore/folder:
    post:
      consumes:
      - application/json
      description: Create a new folder in the filestore at the specified path
      parameters:
      - description: Request body with folder path
        in: body
        name: request
        required: true
        schema:
          properties:
            path:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filestore.Item'
      security:
      - BearerAuth: []
      summary: Create filestore folder
      tags:
      - filestore
  /api/v1/filestore/get:
    get:
      consumes:
      - application/json
      description: Get information about a specific file or folder in the filestore
      parameters:
      - description: Path to the file or folder (e.g., 'documents/file.pdf', 'apps/app_id/folder')
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filestore.Item'
      security:
      - BearerAuth: []
      summary: Get filestore item
      tags:
      - filestore
  /api/v1/filestore/list:
    get:
      consumes:
      - application/json
      description: List files and folders in the specified path. Supports both user
        and app-scoped paths
      parameters:
      - description: Path to list (e.g., 'documents', 'apps/app_id/folder')
        in: query
        name: path
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/filestore.Item'
            type: array
      security:
      - BearerAuth: []
      summary: List filestore items
      tags:
      - filestore
  /api/v1/filestore/rename:
    put:
      consumes:
      - application/json
      description: Rename a file or folder in the filestore. Cannot rename between
        different scopes (user/app)
      parameters:
      - description: Current path of the file or folder
        in: query
        name: path
        required: true
        type: string
      - description: New path for the file or folder
        in: query
        name: new_path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/filestore.Item'
      security:
      - BearerAuth: []
      summary: Rename filestore item
      tags:
      - filestore
  /api/v1/filestore/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload one or more files to the specified path in the filestore.
        Supports multipart form data with 'files' field
      parameters:
      - description: Path where files should be uploaded (e.g., 'documents', 'apps/app_id/folder')
        in: query
        name: path
        required: true
        type: string
      - description: Files to upload (multipart form data)
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Upload success status
          schema:
            properties:
              success:
                type: boolean
            type: object
      security:
      - BearerAuth: []
      summary: Upload files to filestore
      tags:
      - filestore
  /api/v1/filestore/viewer/{path}:
    get:
      consumes:
      - application/json
      description: Serve files from the filestore with access control. Supports both
        user and app-scoped paths
      parameters:
      - description: File path to view (e.g., 'dev/users/user_id/file.pdf', 'dev/apps/app_id/file.pdf')
        in: path
        name: path
        required: true
        type: string
      - description: Set to 'true' to redirect .url files to their target URLs
        in: query
        name: redirect_urls
        type: string
      - description: URL signature for public access
        in: query
        name: signature
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File content
          schema:
            type: file
      security:
      - BearerAuth: []
      summary: View filestore files
      tags:
      - filestore
  /api/v1/helix-models:
    get:
      description: List all available Helix models, optionally filtering by type,
        name, or runtime.
      parameters:
      - description: Filter by model type (e.g., chat, embedding)
        in: query
        name: type
        type: string
      - description: Filter by model name
        in: query
        name: name
        type: string
      - description: Filter by model runtime (e.g., ollama, vllm)
        in: query
        name: runtime
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Model'
            type: array
      security:
      - BearerAuth: []
      summary: List Helix models
      tags:
      - models
    post:
      description: Create a new Helix model configuration. Requires admin privileges.
      parameters:
      - description: Model configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Model'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Model'
        "400":
          description: Invalid request body
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new Helix model
      tags:
      - models
  /api/v1/helix-models/{id}:
    delete:
      description: Delete a Helix model configuration. Requires admin privileges.
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Missing ID
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete a Helix model
      tags:
      - models
    put:
      description: Update an existing Helix model configuration. Requires admin privileges.
      parameters:
      - description: Model ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated model configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Model'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Model'
        "400":
          description: Invalid request body or missing ID
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "404":
          description: Model not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update an existing Helix model
      tags:
      - models
  /api/v1/helix-models/memory-estimate:
    get:
      description: Estimate memory requirements for a model on different GPU configurations
      parameters:
      - description: Model ID
        in: query
        name: model_id
        required: true
        type: string
      - description: 'Number of GPUs (default: auto-detect)'
        in: query
        name: gpu_count
        type: integer
      - description: 'Context length (default: model default)'
        in: query
        name: context_length
        type: integer
      - description: 'Batch size (default: 512)'
        in: query
        name: batch_size
        type: integer
      - description: 'Number of parallel sequences/concurrent requests (default: 2)'
        in: query
        name: num_parallel
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.MemoryEstimationResponse'
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "404":
          description: Model not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Estimate model memory requirements
      tags:
      - models
  /api/v1/helix-models/memory-estimates:
    get:
      description: Get memory estimates for multiple models with different GPU configurations
      parameters:
      - description: Comma-separated list of model IDs
        in: query
        name: model_ids
        type: string
      - description: 'Number of GPUs (default: auto-detect)'
        in: query
        name: gpu_count
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.MemoryEstimationResponse'
            type: array
        "400":
          description: Invalid request parameters
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List memory estimates for multiple models
      tags:
      - models
  /api/v1/knowledge:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Knowledge'
            type: array
      security:
      - BearerAuth: []
  /api/v1/knowledge/{id}:
    delete:
      description: Delete knowledge
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Knowledge'
      security:
      - BearerAuth: []
      summary: Delete knowledge
      tags:
      - knowledge
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Knowledge'
  /api/v1/knowledge/{id}/complete:
    post:
      description: Complete knowledge preparation and move to pending state for indexing
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Knowledge'
      security:
      - BearerAuth: []
      summary: Complete knowledge preparation
      tags:
      - knowledge
  /api/v1/knowledge/{id}/download:
    get:
      description: Download all files from a filestore-backed knowledge as a zip file
      produces:
      - application/zip
      responses:
        "200":
          description: OK
          schema:
            type: file
      security:
      - BearerAuth: []
      summary: Download knowledge files as zip
      tags:
      - knowledge
  /api/v1/knowledge/{id}/refresh:
    post:
      description: Refresh knowledge
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Knowledge'
      security:
      - BearerAuth: []
      summary: Refresh knowledge
      tags:
      - knowledge
  /api/v1/knowledge/{id}/versions:
    get:
      description: List knowledge versions
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.KnowledgeVersion'
            type: array
      security:
      - BearerAuth: []
      summary: List knowledge versions
      tags:
      - knowledge
  /api/v1/license:
    get:
      consumes:
      - application/json
      description: Get the license key for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.LicenseKeyRequest'
      security:
      - BearerAuth: []
      summary: Get license key
    post:
      consumes:
      - application/json
      description: Set the license key for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.LicenseKeyRequest'
      security:
      - BearerAuth: []
      summary: Set license key
  /api/v1/llm_calls:
    get:
      description: List LLM calls with pagination and optional session filtering
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: pageSize
        type: integer
      - description: Filter by session ID
        in: query
        name: session
        type: string
      - description: Filter by interaction ID
        in: query
        name: interaction
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PaginatedLLMCalls'
      security:
      - BearerAuth: []
      summary: List LLM calls
      tags:
      - llm_calls
  /api/v1/logs/{slot_id}:
    get:
      description: Retrieve logs for a specific slot by proxying the request to the
        runner
      parameters:
      - description: Slot ID
        in: path
        name: slot_id
        required: true
        type: string
      - description: 'Maximum number of lines to return (default: 500)'
        in: query
        name: lines
        type: integer
      - description: Return logs since this timestamp (RFC3339 format)
        in: query
        name: since
        type: string
      - description: Filter by log level (ERROR, WARN, INFO, DEBUG)
        in: query
        name: level
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get logs for a specific slot
      tags:
      - logs
  /api/v1/model-info:
    get:
      description: List all dynamic model infos. Requires admin privileges.
      parameters:
      - description: Filter by provider (e.g., helix, openai)
        in: query
        name: provider
        type: string
      - description: Filter by model name
        in: query
        name: name
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.DynamicModelInfo'
            type: array
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: List dynamic model infos
      tags:
      - model-info
    post:
      description: Create a new dynamic model info configuration. Requires admin privileges.
      parameters:
      - description: Dynamic model info configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.DynamicModelInfo'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.DynamicModelInfo'
        "400":
          description: Invalid request body
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new dynamic model info
      tags:
      - model-info
  /api/v1/model-info/{id}:
    delete:
      description: Delete a dynamic model info configuration. Requires admin privileges.
      parameters:
      - description: Dynamic model info ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Missing ID
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete a dynamic model info
      tags:
      - model-info
    get:
      description: Get a specific dynamic model info by ID. Requires admin privileges.
      parameters:
      - description: Dynamic model info ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DynamicModelInfo'
        "400":
          description: Missing ID
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "404":
          description: Dynamic model info not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get a dynamic model info by ID
      tags:
      - model-info
    put:
      description: Update an existing dynamic model info configuration. Requires admin
        privileges.
      parameters:
      - description: Dynamic model info ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated dynamic model info configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.DynamicModelInfo'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DynamicModelInfo'
        "400":
          description: Invalid request body or missing ID
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "404":
          description: Dynamic model info not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update an existing dynamic model info
      tags:
      - model-info
  /api/v1/oauth/connections:
    get:
      description: List OAuth connections for the user.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.OAuthConnection'
            type: array
      security:
      - BearerAuth: []
      summary: List OAuth connections
      tags:
      - oauth
  /api/v1/oauth/connections/{id}:
    delete:
      description: Delete an OAuth connection. Users can only delete their own connections
        unless they are admin.
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Delete an OAuth connection
      tags:
      - oauth
    get:
      description: Get a specific OAuth connection by ID. Users can only access their
        own connections unless they are admin.
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.OAuthConnection'
      security:
      - BearerAuth: []
      summary: Get an OAuth connection
      tags:
      - oauth
  /api/v1/oauth/connections/{id}/refresh:
    post:
      description: Manually refresh an OAuth connection
      parameters:
      - description: Connection ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.OAuthConnection'
      security:
      - BearerAuth: []
      summary: Refresh an OAuth connection
      tags:
      - oauth
  /api/v1/oauth/providers:
    get:
      description: List OAuth providers for the user.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.OAuthProvider'
            type: array
      security:
      - BearerAuth: []
      summary: List OAuth providers
      tags:
      - oauth
    post:
      description: Create a new OAuth provider for the user.
      parameters:
      - description: Request body with OAuth provider configuration.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.OAuthProvider'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.OAuthProvider'
      security:
      - BearerAuth: []
      summary: Create a new OAuth provider
      tags:
      - oauth
  /api/v1/oauth/providers/{id}:
    delete:
      description: Delete an existing OAuth provider for the user.
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Delete an OAuth provider
      tags:
      - oauth
  /api/v1/organizations:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Organization'
            type: array
      security:
      - BearerAuth: []
    post:
      description: Create a new organization. Only admin users can create organizations.
      parameters:
      - description: Request body with organization configuration.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Organization'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Organization'
      security:
      - BearerAuth: []
      summary: Create a new organization
      tags:
      - organizations
  /api/v1/organizations/{id}:
    delete:
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Organization'
    put:
      description: Update an organization, must be an owner of the organization
      parameters:
      - description: Request body with organization configuration.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Organization'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Organization'
      security:
      - BearerAuth: []
      summary: Update an organization
      tags:
      - organizations
  /api/v1/organizations/{id}/members:
    get:
      description: List members of an organization
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.OrganizationMembership'
            type: array
      security:
      - BearerAuth: []
      summary: List organization members
      tags:
      - organizations
    post:
      description: Add a member to an organization
      parameters:
      - description: Request body with user email to add.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.AddOrganizationMemberRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.OrganizationMembership'
      security:
      - BearerAuth: []
      summary: Add an organization member
      tags:
      - organizations
  /api/v1/organizations/{id}/members/{user_id}:
    delete:
      description: Remove a member from an organization
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Remove an organization member
      tags:
      - organizations
    put:
      description: Update a member's role in an organization
      parameters:
      - description: Request body with role to update to.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.UpdateOrganizationMemberRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.OrganizationMembership'
      security:
      - BearerAuth: []
      summary: Update an organization member
      tags:
      - organizations
  /api/v1/organizations/{id}/roles:
    get:
      description: List all roles in an organization. Organization members can list
        roles.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Role'
            type: array
      security:
      - BearerAuth: []
      summary: List roles in an organization
      tags:
      - organizations
  /api/v1/organizations/{id}/teams:
    get:
      description: List all teams in an organization. Organization members can list
        teams.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Team'
            type: array
      security:
      - BearerAuth: []
      summary: List teams in an organization
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Create a new team in an organization. Only organization owners
        can create teams.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateTeamRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Team'
      security:
      - BearerAuth: []
      summary: Create a new team
      tags:
      - organizations
  /api/v1/organizations/{id}/teams/{team_id}:
    delete:
      description: Delete a team from an organization. Only organization owners can
        delete teams.
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Delete a team
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: Update a team's details. Only organization owners can update teams.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.UpdateTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Team'
      security:
      - BearerAuth: []
      summary: Update a team
      tags:
      - organizations
  /api/v1/organizations/{id}/teams/{team_id}/members:
    get:
      description: List all members of a team.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.TeamMembership'
            type: array
      security:
      - BearerAuth: []
      summary: List members of a team
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Add a new member to a team. Only organization owners can add members
        to teams.
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.AddTeamMemberRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.TeamMembership'
      security:
      - BearerAuth: []
      summary: Add a new member to a team
      tags:
      - organizations
  /api/v1/provider-endpoints:
    get:
      parameters:
      - description: Include models
        in: query
        name: with_models
        type: boolean
      - description: Organization ID
        in: query
        name: org_id
        type: string
      - description: Include all endpoints (system admin only)
        in: query
        name: all
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.ProviderEndpoint'
            type: array
      security:
      - BearerAuth: []
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ProviderEndpoint'
      security:
      - BearerAuth: []
  /api/v1/provider-endpoints/{id}:
    delete:
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
    put:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UpdateProviderEndpoint'
      security:
      - BearerAuth: []
  /api/v1/provider-endpoints/{id}/daily-usage:
    get:
      consumes:
      - application/json
      description: Get provider daily usage
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: string
      - description: Start date
        in: query
        name: from
        type: string
      - description: End date
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.AggregatedUsageMetric'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Get provider daily usage
      tags:
      - providers
  /api/v1/provider-endpoints/{id}/users-daily-usage:
    get:
      consumes:
      - application/json
      description: Get provider daily usage per user
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: string
      - description: Start date
        in: query
        name: from
        type: string
      - description: End date
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.UsersAggregatedUsageMetric'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Get provider daily usage per user
      tags:
      - providers
  /api/v1/providers:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Provider'
            type: array
      security:
      - BearerAuth: []
  /api/v1/scheduler/heartbeats:
    get:
      description: Get the health status of all scheduler goroutines
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get scheduler goroutine heartbeat status
      tags:
      - dashboard
  /api/v1/search:
    get:
      description: Search knowledges for a given app and prompt
      parameters:
      - description: App ID
        in: query
        name: app_id
        required: true
        type: string
      - description: Knowledge ID
        in: query
        name: knowledge_id
        type: string
      - description: Search prompt
        in: query
        name: prompt
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.KnowledgeSearchResult'
            type: array
      security:
      - BearerAuth: []
      summary: Search knowledges
      tags:
      - knowledge
  /api/v1/secrets:
    get:
      description: List secrets for the user.
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Secret'
            type: array
      security:
      - BearerAuth: []
      summary: List secrets
      tags:
      - secrets
    post:
      description: Create a new secret for the user.
      parameters:
      - description: Request body with secret configuration.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Secret'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Secret'
      security:
      - BearerAuth: []
      summary: Create new secret
      tags:
      - secrets
  /api/v1/secrets/{id}:
    delete:
      description: Delete a secret for the user.
      parameters:
      - description: Secret ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Secret'
      security:
      - BearerAuth: []
      summary: Delete a secret
      tags:
      - secrets
    put:
      description: Update an existing secret for the user.
      parameters:
      - description: Request body with updated secret configuration.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Secret'
      - description: Secret ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Secret'
      security:
      - BearerAuth: []
      summary: Update an existing secret
      tags:
      - secrets
  /api/v1/sessions:
    get:
      description: List sessions
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Organization slug or ID
        in: query
        name: org_id
        type: string
      - description: Search sessions by name
        in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.PaginatedSessionsList'
      security:
      - BearerAuth: []
      summary: List sessions
      tags:
      - sessions
  /api/v1/sessions/{id}:
    delete:
      description: Delete a session by ID
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Session'
      security:
      - BearerAuth: []
      summary: Delete a session by ID
      tags:
      - sessions
    get:
      description: Get a session by ID
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Session'
      security:
      - BearerAuth: []
      summary: Get a session by ID
      tags:
      - sessions
    put:
      description: Update a session by ID
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      - description: Session to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.Session'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Session'
      security:
      - BearerAuth: []
      summary: Update a session by ID
      tags:
      - sessions
  /api/v1/sessions/{id}/interactions:
    get:
      description: List interactions for a session
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Interaction'
            type: array
      security:
      - BearerAuth: []
      summary: List interactions for a session
      tags:
      - interactions
  /api/v1/sessions/{id}/interactions/{interaction_id}:
    get:
      description: Get an interaction by ID
      parameters:
      - description: Session ID
        in: path
        name: id
        required: true
        type: string
      - description: Interaction ID
        in: path
        name: interaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Interaction'
      security:
      - BearerAuth: []
      summary: Get an interaction by ID
      tags:
      - interactions
  /api/v1/sessions/{id}/step-info:
    get:
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.StepInfo'
            type: array
      security:
      - BearerAuth: []
  /api/v1/sessions/chat:
    post:
      parameters:
      - description: Request body with the message and model to start chat completion.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SessionChatRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.OpenAIResponse'
      security:
      - BearerAuth: []
  /api/v1/skills:
    get:
      description: List all available YAML-based skills
      parameters:
      - description: Filter by category
        in: query
        name: category
        type: string
      - description: Filter by OAuth provider
        in: query
        name: provider
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SkillsListResponse'
      security:
      - BearerAuth: []
      summary: List YAML skills
      tags:
      - skills
  /api/v1/skills/{id}:
    get:
      description: Get details of a specific YAML skill
      parameters:
      - description: Skill ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SkillDefinition'
      security:
      - BearerAuth: []
      summary: Get a skill by ID
      tags:
      - skills
  /api/v1/skills/reload:
    post:
      description: Reload all YAML skills from the filesystem
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Reload skills
      tags:
      - skills
  /api/v1/skills/validate:
    post:
      description: Validate MCP skill configuration
      parameters:
      - description: MCP skill configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.AssistantMCP'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ToolMCPClientConfig'
      security:
      - BearerAuth: []
      summary: Validate MCP skill configuration
      tags:
      - skills
  /api/v1/slots/{slot_id}:
    delete:
      description: Delete a slot from the scheduler's desired state, allowing reconciliation
        to clean it up from the runner
      parameters:
      - description: Slot ID
        in: path
        name: slot_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Delete a slot from scheduler state
      tags:
      - dashboard
  /api/v1/subscription/manage:
    post:
      description: Manage a subscription
      parameters:
      - description: Organization ID
        in: query
        name: org_id
        type: string
      responses:
        "200":
          description: Subscription session URL
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Manage a subscription
      tags:
      - wallets
  /api/v1/subscription/new:
    post:
      description: Create a subscription
      parameters:
      - description: Organization ID
        in: query
        name: org_id
        type: string
      responses:
        "200":
          description: Subscription session URL
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a subscription
      tags:
      - wallets
  /api/v1/system/settings:
    get:
      description: Get global system settings. Requires admin privileges.
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SystemSettingsResponse'
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get system settings
      tags:
      - system
    put:
      description: Update global system settings. Requires admin privileges.
      parameters:
      - description: System settings update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SystemSettingsRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SystemSettingsResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "403":
          description: Forbidden - Admin required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update system settings
      tags:
      - system
  /api/v1/top-ups/new:
    post:
      description: Create a top up with specified amount
      parameters:
      - description: Request body with amount
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.CreateTopUpRequest'
      responses:
        "200":
          description: Top up session URL
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a top up
      tags:
      - wallets
  /api/v1/triggers:
    get:
      description: List all triggers configurations for either user or the org or
        user within an org
      parameters:
      - description: Organization ID
        in: query
        name: org_id
        type: string
      - description: Trigger type, defaults to 'cron'
        in: query
        name: trigger_type
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.TriggerConfiguration'
            type: array
      security:
      - BearerAuth: []
      summary: List all triggers configurations for either user or the org or user
        within an org
      tags:
      - apps
    post:
      description: Create triggers for the app. Used to create standalone trigger
        configurations such as cron tasks for agents that could be owned by a different
        user than the owner of the app
      parameters:
      - description: Trigger configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.TriggerConfiguration'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TriggerConfiguration'
      security:
      - BearerAuth: []
      summary: Create app triggers
      tags:
      - apps
  /api/v1/triggers/{trigger_id}:
    delete:
      description: Delete triggers for the app
      parameters:
      - description: Trigger ID
        in: path
        name: trigger_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TriggerConfiguration'
      security:
      - BearerAuth: []
      summary: Delete app triggers
      tags:
      - apps
    put:
      description: Update triggers for the app, for example to change the cron schedule
        or enable/disable the trigger
      parameters:
      - description: Trigger ID
        in: path
        name: trigger_id
        required: true
        type: string
      - description: Trigger configuration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.TriggerConfiguration'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TriggerConfiguration'
      security:
      - BearerAuth: []
      summary: Update app triggers
      tags:
      - apps
  /api/v1/triggers/{trigger_id}/execute:
    post:
      description: Update triggers for the app, for example to change the cron schedule
        or enable/disable the trigger
      parameters:
      - description: Trigger ID
        in: path
        name: trigger_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TriggerExecuteResponse'
      security:
      - BearerAuth: []
      summary: Execute app trigger
      tags:
      - apps
  /api/v1/triggers/{trigger_id}/executions:
    get:
      description: List executions for the trigger
      parameters:
      - description: Trigger ID
        in: path
        name: trigger_id
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.TriggerExecution'
            type: array
      security:
      - BearerAuth: []
      summary: List trigger executions
      tags:
      - apps
  /api/v1/usage:
    get:
      consumes:
      - application/json
      description: Get daily usage
      parameters:
      - description: Start date
        in: query
        name: from
        type: string
      - description: End date
        in: query
        name: to
        type: string
      - description: Organization ID
        in: query
        name: org_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.AggregatedUsageMetric'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/system.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/system.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/system.HTTPError'
      security:
      - BearerAuth: []
      summary: Get daily usage
      tags:
      - usage
  /api/v1/users/{id}:
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.User'
      security:
      - BearerAuth: []
      summary: Get user details
      tags:
      - users
  /api/v1/users/search:
    get:
      description: Search users by email, name, or username
      parameters:
      - description: Query
        in: query
        name: query
        required: true
        type: string
      - description: Organization ID
        in: query
        name: organization_id
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserSearchResponse'
      security:
      - BearerAuth: []
      summary: Search users
      tags:
      - users
  /api/v1/users/token-usage:
    get:
      description: Get current user's monthly token usage and limits
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserTokenUsageResponse'
      security:
      - BearerAuth: []
      summary: Get user token usage
      tags:
      - users
  /api/v1/wallet:
    get:
      description: Get a wallet
      parameters:
      - description: Organization ID
        in: query
        name: org_id
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Wallet'
      security:
      - BearerAuth: []
      summary: Get a wallet
      tags:
      - wallets
  /v1/chat/completions:
    post:
      description: Creates a model response for the given chat conversation.
      parameters:
      - description: Request body with options for conversational AI.
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sashabaranov_go-openai.ChatCompletionResponse'
      security:
      - BearerAuth: []
      summary: Stream responses for chat
      tags:
      - chat
  /v1/embeddings:
    post:
      description: Creates an embedding vector representing the input text. Supports
        both standard OpenAI embedding format and Chat Embeddings API format with
        messages.
      parameters:
      - description: Request body with options for embeddings. Can use either 'input'
          field (standard) or 'messages' field (Chat Embeddings API).
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.FlexibleEmbeddingRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.FlexibleEmbeddingResponse'
      security:
      - BearerAuth: []
      summary: Creates an embedding vector representing the input text
      tags:
      - embeddings
  /v1/models:
    get:
      parameters:
      - description: Provider
        in: query
        name: provider
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.OpenAIModelsList'
            type: array
      security:
      - BearerAuth: []
schemes:
- https
swagger: "2.0"
