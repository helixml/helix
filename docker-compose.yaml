version: '3'

services:
  router:
    image: binocarlos/noxy:v6
    restart: always
    ports:
      - 80:80
    depends_on:
      - postgres
      - keycloak
      - api
      - frontend
    environment:
      - NOXY_DEFAULT_HOST=frontend
      - NOXY_DEFAULT_PORT=8081
      - NOXY_DEFAULT_WS=1
      - NOXY_API_FRONT=/api/v1
      - NOXY_API_HOST=api
      - NOXY_API_PORT=80
      - NOXY_API_WS=1
      - NOXY_KEYCLOAK_FRONT=/auth
      - NOXY_KEYCLOAK_HOST=keycloak
      - NOXY_KEYCLOAK_PORT=8080
  postgres:
    image: postgres:12.13-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - helix-postgres-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  keycloak:
    image: quay.io/modeldynamics/keycloak:15.0.2-helix
    user: "1000:0"
    restart: always
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=oh-hallo-insecure-password
      - KC_PROXY=edge
      - DB_VENDOR=h2
      - KEYCLOAK_IMPORT=/imported/realm.json -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.profile=preview
      - KEYCLOAK_FRONTEND_URL=http://beefy/auth/
    volumes:
      - ./realm.json:/imported/realm.json
      - helix-keycloak-db:/opt/jboss/keycloak/standalone/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: always
    environment:
      - APP_URL=http://beefy
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - SERVER_URL=http://beefy
      - KEYCLOAK_URL=http://keycloak:8080/auth
      # this is an insecure development key do not use!
      - KEYCLOAK_TOKEN=5ca0fc03-d625-456e-bca7-8e732309165f
    entrypoint: tail -f /dev/null
    volumes:
      - ./go.mod:/app/go.mod
      - ./go.sum:/app/go.sum
      - ./api:/app/api
      # Allow the container to SSH onto the host - don't ask, it's the day before a deadline
      - ~/.ssh/id_rsa:/root/.ssh/id_rsa
  frontend:
    ports:
      - 8081:8081
    build:
      context: frontend
      dockerfile: Dockerfile
      target: build-env
    restart: always
    entrypoint: yarn run dev
    volumes:
      - ./frontend/package.json:/app/package.json
      - ./frontend/src:/app/src
      - ./frontend/assets:/app/assets
      - ./frontend/index.html:/app/index.html
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/vite.config.ts:/app/vite.config.ts

volumes:
  helix-keycloak-db:
  helix-postgres-db:

