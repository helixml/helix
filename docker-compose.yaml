# Production docker-compose.yaml for HelixML :latest
# See https://docs.helix.ml/helix/private-deployment/controlplane/

version: '3'

services:
  api:
    image: registry.helix.ml/helix/controlplane:latest
    # If you want to run the API on a different port, set the
    # API_PORT environment variable and also updated env variables
    # for SERVER_URL and KEYCLOAK_FRONTEND_URL to match how you
    # connect to Helix
    ports:
      - ${API_PORT:-8080}:80
    restart: always
    env_file:
      - .env
    environment:
      - LOG_LEVEL=debug
      - APP_URL=${SERVER_URL:-http://localhost:8080}
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY:-}
      - RUNNER_TOKEN=${RUNNER_TOKEN-oh-hallo-insecure-token}
      - SERVER_URL=${SERVER_URL:-http://localhost:8080}
      - KEYCLOAK_URL=http://keycloak:8080/auth
      # this is an insecure development key do not use!
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD-oh-hallo-insecure-password}
      - KEYCLOAK_FRONTEND_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost:8080/auth/}
      # lock down dashboard in production
      - ADMIN_USER_IDS=${ADMIN_USER_IDS-all}
      - TEXT_EXTRACTION_URL=http://llamaindex:5000/api/v1/extract
      - RAG_INDEX_URL=http://llamaindex:5000/api/v1/rag/chunk
      - RAG_QUERY_URL=http://llamaindex:5000/api/v1/rag/query
      - EVAL_USER_ID=${EVAL_USER_ID:-}
      - FILESTORE_LOCALFS_PATH=/filestore
    volumes:
      - ${FILESTORE_DATA:-helix-filestore}:/filestore
    depends_on:
      - postgres
      - keycloak
    extra_hosts:
      - "host.docker.internal:host-gateway"
  postgres:
    image: postgres:12.13-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ${POSTGRES_DATA:-helix-postgres-db}:/var/lib/postgresql/data
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
      - POSTGRES_DATABASES=keycloak
  # postgres 15 with pgvector installed for vector database
  pgvector:
    profiles: [full]
    image: ankane/pgvector
    restart: always
    ports:
      - 5433:5432
    volumes:
      - ${PGVECTOR_DATA:-helix-pgvector-db}:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    restart: always
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD-oh-hallo-insecure-password}
      - KC_PROXY_HEADERS=forwarded|xforwarded
      - KC_HEALTH_ENABLED=true
      - KC_HOSTNAME_PATH=/auth
      - KC_HTTP_RELATIVE_PATH=/auth/
      - KC_HOSTNAME_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost:8080/auth/}
      - KC_HOSTNAME_ADMIN_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost:8080/auth/}
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /auth/health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 5s
      timeout: 5s
      retries: 30
    command: ["start", "--proxy", "edge"]
  llamaindex:
    profiles: [full]
    image: registry.helix.ml/helix/llamaindex:latest
    # ports:
      # - 5000:5000
    restart: always
    environment:
      - POSTGRES_HOST=pgvector
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
  tika:
    image: apache/tika:2.9.2.1
    ports:
      - 9998:9998
  typesense:
    image: registry.helix.ml/helix/typesense:latest
    command: ["--data-dir", "/data", "--api-key", "typesense"]
    ports:
      - 8108:8108
    volumes:
      - ${TYPESENSE_DATA:-helix-typesense-db}:/data

volumes:
  helix-postgres-db:
  helix-pgvector-db:
  helix-filestore:
  helix-typesense-db:

networks:
  default:
    name: helix_default
