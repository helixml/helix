# Production docker-compose.yaml for HelixML :latest
# See https://docs.helixml.tech/helix/private-deployment/controlplane/

version: '3'

services:
  api:
    image: registry.helixml.tech/helix/controlplane:latest
    # If you want to run the API on a different port, set the
    # API_PORT environment variable and also updated env variables
    # for SERVER_URL and KEYCLOAK_FRONTEND_URL to match how you
    # connect to Helix
    ports:
      - ${API_PORT:-8080}:8080
    restart: always
    env_file:
      - .env
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SERVER_PORT=8080
      - APP_URL=${SERVER_URL:-http://localhost:8080}
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY:-}
      - RUNNER_TOKEN=${RUNNER_TOKEN-oh-hallo-insecure-token}
      - SERVER_URL=${SERVER_URL:-http://localhost:8080}
      - KEYCLOAK_URL=http://keycloak:8080/auth
      # this is an insecure development key do not use!
      - KEYCLOAK_USER=${KEYCLOAK_ADMIN_USER-admin}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD-oh-hallo-insecure-password}
      - KEYCLOAK_FRONTEND_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost:8080/auth/}
      # lock down dashboard in production
      - ADMIN_USER_IDS=${ADMIN_USER_IDS-all}
      - ADMIN_USER_SOURCE=${ADMIN_USER_SOURCE-env}
      - EVAL_USER_ID=${EVAL_USER_ID:-}
      - FILESTORE_LOCALFS_PATH=/filestore
      # Socket configuration for haystack communication
      - HELIX_EMBEDDINGS_SOCKET=/socket/embeddings.sock
      - RAG_HAYSTACK_ENABLED=${RAG_HAYSTACK_ENABLED:-false}
      - RAG_HAYSTACK_URL=http://haystack:8000
    volumes:
      - ${FILESTORE_DATA:-helix-filestore}:/filestore
      - helix-socket:/socket
    depends_on:
      - postgres
      - keycloak
    extra_hosts:
      - "host.docker.internal:host-gateway"
  postgres:
    image: postgres:12.13-alpine
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ${POSTGRES_DATA:-helix-postgres-db}:/var/lib/postgresql/data
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
      - POSTGRES_DATABASES=keycloak
  # postgres 15 with pgvector installed for vector database
  pgvector:
    profiles: [haystack]
    image: ghcr.io/tensorchord/vchord_bm25-postgres:pg17-v0.2.1
    restart: always
    ports:
      - 5433:5432
    volumes:
      - ${PGVECTOR_DATA:-helix-pgvector-db}:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${PGVECTOR_PASSWORD-pgvector}
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    restart: always
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=${POSTGRES_ADMIN_PASSWORD-postgres}
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD-oh-hallo-insecure-password}
      - KC_PROXY_HEADERS=forwarded|xforwarded
      - KC_HEALTH_ENABLED=true
      - KC_HOSTNAME_PATH=/auth
      - KC_HTTP_RELATIVE_PATH=/auth/
      - KC_HOSTNAME_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost:8080/auth/}
      - KC_HOSTNAME_ADMIN_URL=${KEYCLOAK_FRONTEND_URL:-http://localhost:8080/auth/}
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /auth/health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 5s
      timeout: 5s
      retries: 30
    command: ["start", "--proxy", "edge"]
  gptscript_runner:
    image: registry.helixml.tech/helix/gptscript-runner:latest
    restart: always
    env_file:
      - .env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - API_HOST=http://api:8080
      - API_TOKEN=${RUNNER_TOKEN-oh-hallo-insecure-token}
      - GPTSCRIPT_PROVIDER_API_API_KEY=${RUNNER_TOKEN:-}
      - CONCURRENCY=20 # number of tasks to run concurrently
      - MAX_TASKS=0  # max number of tasks to run before exiting. Set to 0 to run forever
    depends_on:
      - api
  tika:
    image: apache/tika:2.9.2.1
    restart: always
    ports:
      - 9998:9998
  typesense:
    image: registry.helixml.tech/helix/typesense:latest
    restart: always
    command: ["--data-dir", "/data", "--api-key", "typesense"]
    ports:
      - 8108:8108
    volumes:
      - ${TYPESENSE_DATA:-helix-typesense-db}:/data
  chrome:
    image: ghcr.io/go-rod/rod:v0.115.0
    restart: always
    volumes:
      - ./integration-test/data/smoke:/integration-test/data/smoke
    ports:
      - 7317:7317
  haystack:
    profiles: [haystack]
    image: registry.helixml.tech/helix/haystack:latest
    restart: always
    environment:
      - PGVECTOR_DSN=postgresql://postgres:${PGVECTOR_PASSWORD-pgvector}@pgvector:5432/postgres
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - VLLM_BASE_URL=${RAG_HAYSTACK_EMBEDDINGS_BASE_URL:-}
      - VLLM_API_KEY=${RAG_HAYSTACK_EMBEDDINGS_API_KEY:-EMPTY}
      - RAG_HAYSTACK_EMBEDDINGS_MODEL=${RAG_HAYSTACK_EMBEDDINGS_MODEL:-Alibaba-NLP/gte-Qwen2-7B-instruct}
      - RAG_HAYSTACK_EMBEDDINGS_DIM=${RAG_HAYSTACK_EMBEDDINGS_DIM:-3584}
      - RAG_HAYSTACK_EMBEDDINGS_MAX_TOKENS=${RAG_HAYSTACK_EMBEDDINGS_MAX_TOKENS:-32768}
      - RAG_HAYSTACK_CHUNK_SIZE=${RAG_HAYSTACK_CHUNK_SIZE:-1000}
      - RAG_HAYSTACK_CHUNK_OVERLAP=${RAG_HAYSTACK_CHUNK_OVERLAP:-50}
      # Socket configuration for api communication
      - HELIX_EMBEDDINGS_SOCKET=/socket/embeddings.sock
      # Vision RAG Settings
      - RAG_VISION_ENABLED=${RAG_VISION_ENABLED:-false}
      - RAG_VISION_BASE_URL=${RAG_VISION_BASE_URL:-}
      - RAG_VISION_API_KEY=${RAG_VISION_API_KEY:-}
      - RAG_VISION_EMBEDDINGS_MODEL=${RAG_VISION_EMBEDDINGS_MODEL:-MrLight/dse-qwen2-2b-mrl-v1}
      - RAG_VISION_EMBEDDINGS_DIM=${RAG_VISION_EMBEDDINGS_DIM:-1536}
      - RAG_VISION_EMBEDDINGS_SOCKET=${RAG_VISION_EMBEDDINGS_SOCKET:-}
      - RAG_VISION_PGVECTOR_TABLE=${RAG_VISION_PGVECTOR_TABLE:-haystack_documents_vision}
    volumes:
      - helix-socket:/socket
    depends_on:
      - pgvector
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  helix-postgres-db:
  helix-pgvector-db:
  helix-filestore:
  helix-typesense-db:
  helix-socket:

networks:
  default:
    name: helix_default
